It has been shown, both empirically that performing core reasoning tasks on large ontologies in OWL 2 is resource-intensive.
It has been shown, both theoretically that performing core reasoning tasks on large ontologies in OWL 2 is time-consuming.
It has been shown, both empirically that performing core reasoning tasks on large ontologies in OWL 1 is resource-intensive.
It has been shown, both empirically that performing core reasoning tasks on large ontologies in OWL 1 is time-consuming.
It has been shown, both empirically that performing core reasoning tasks on expressive ontologies in OWL 2 is time-consuming.
It has been shown, both empirically that performing core reasoning tasks on large ontologies in OWL 2 is time-consuming.
It has been shown, both theoretically that performing core reasoning tasks on expressive ontologies in OWL 1 is time-consuming.
It has been shown, both theoretically that performing core reasoning tasks on large ontologies in OWL 1 is resource-intensive.
It has been shown, both theoretically that performing core reasoning tasks on large ontologies in OWL 2 is resource-intensive.
It has been shown, both theoretically that performing core reasoning tasks on large ontologies in OWL 1 is time-consuming.
It has been shown, both theoretically that performing core reasoning tasks on expressive ontologies in OWL 2 is time-consuming.
It has been shown, both theoretically that performing core reasoning tasks on expressive ontologies in OWL 1 is resource-intensive.
It has been shown, both empirically that performing core reasoning tasks on expressive ontologies in OWL 1 is resource-intensive.
It has been shown, both empirically that performing core reasoning tasks on expressive ontologies in OWL 1 is time-consuming.
It has been shown, both empirically that performing core reasoning tasks on expressive ontologies in OWL 2 is resource-intensive.
It has been shown, both theoretically that performing core reasoning tasks on expressive ontologies in OWL 2 is resource-intensive.
Moreover, due to optimisation techniques each reasoner may be efficient for ontologies with different characteristics.
Moreover, due to the different reasoning algorithms each reasoner may be efficient for ontologies with different characteristics.
the different reasoning algorithms employed.
optimisation techniques employed.
In this paper, we present R _ 2O _ 2, a meta-reasoner and selects from a number of state-of-the-art OWL 2 DL reasoners to achieve high efficiency, making use of ranking models.
In this paper, we present R _ 2O _ 2, a meta-reasoner and selects from a number of state-of-the-art OWL 2 DL reasoners to achieve high efficiency, making use of performance prediction models.
a meta-reasoner that automatically combines.
In this paper, we present R _ 2O _ 2, ranks and selects from a number of state-of-the-art OWL 2 DL reasoners to achieve high efficiency, making use of ranking models.
In this paper, we present R _ 2O _ 2, ranks and selects from a number of state-of-the-art OWL 2 DL reasoners to achieve high efficiency, making use of performance prediction models.
we comprehensive evaluation on a large ontology corpus shows that R _ 2O _ 2 consistently outperforms 6 state-of-the-art OWL 2 DL reasoners on average performance, with an average speedup of up to 14x.
we comprehensive evaluation on a large ontology corpus shows that R _ 2O _ 2 significantly outperforms 6 state-of-the-art OWL 2 DL reasoners on average performance, with an average speedup of up to 14x.
R _ 2O _ 2 also shows a 1.4.
R _ 2O _ 2 also speedup over Konclude.
R _ 2O _ 2 also speedup over the current dominant OWL 2 DL reasoner.