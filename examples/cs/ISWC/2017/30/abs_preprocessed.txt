In many applications, there is an increasing need for the new types of RDF data analysis that are not covered by standard reasoning tasks such as SPARQL query answering.
One such important analysis task is entity comparison, i.e., determining what are similarities between two given entities in an RDF graph.
One such important analysis task is entity comparison, i.e., determining what are differences between two given entities in an RDF graph.
For instance, in an RDF graph about drugs, we may want to compare Metamizole but, in contrast to Metamizole, Ibuprofen also has a considerable anti-inflammatory effect.
For instance, in an RDF graph about drugs, we may want to find out that Ibuprofen are similar in that Ibuprofen are both analgesics but, in contrast to Metamizole, Ibuprofen also has a considerable anti-inflammatory effect.
For instance, in an RDF graph about drugs, we may want to compare Metamizole but, in contrast to Metamizole, Ibuprofen also has a considerable anti-inflammatory effect.
For instance, in an RDF graph about drugs, we may want to find out that Ibuprofen are similar in that Metamizole are both analgesics but, in contrast to Metamizole, Ibuprofen also has a considerable anti-inflammatory effect.
For instance, in an RDF graph about drugs, we may want to compare Metamizole but, in contrast to Metamizole, Ibuprofen also has a considerable anti-inflammatory effect.
For instance, in an RDF graph about drugs, we may want to find out that Metamizole are similar in that Ibuprofen are both analgesics but, in contrast to Metamizole, Ibuprofen also has a considerable anti-inflammatory effect.
For instance, in an RDF graph about drugs, we may want to compare Metamizole but, in contrast to Metamizole, Ibuprofen also has a considerable anti-inflammatory effect.
For instance, in an RDF graph about drugs, we may want to find out that Metamizole are similar in that Metamizole are both analgesics but, in contrast to Metamizole, Ibuprofen also has a considerable anti-inflammatory effect.
For instance, in an RDF graph about drugs, we may want to compare Ibuprofen but, in contrast to Metamizole, Ibuprofen also has a considerable anti-inflammatory effect.
For instance, in an RDF graph about drugs, we may want to find out that Ibuprofen are similar in that Metamizole are both analgesics but, in contrast to Metamizole, Ibuprofen also has a considerable anti-inflammatory effect.
For instance, in an RDF graph about drugs, we may want to compare Ibuprofen but, in contrast to Metamizole, Ibuprofen also has a considerable anti-inflammatory effect.
For instance, in an RDF graph about drugs, we may want to find out that Ibuprofen are similar in that Ibuprofen are both analgesics but, in contrast to Metamizole, Ibuprofen also has a considerable anti-inflammatory effect.
For instance, in an RDF graph about drugs, we may want to compare Ibuprofen but, in contrast to Metamizole, Ibuprofen also has a considerable anti-inflammatory effect.
For instance, in an RDF graph about drugs, we may want to find out that Metamizole are similar in that Metamizole are both analgesics but, in contrast to Metamizole, Ibuprofen also has a considerable anti-inflammatory effect.
For instance, in an RDF graph about drugs, we may want to compare Ibuprofen but, in contrast to Metamizole, Ibuprofen also has a considerable anti-inflammatory effect.
For instance, in an RDF graph about drugs, we may want to find out that Metamizole are similar in that Ibuprofen are both analgesics but, in contrast to Metamizole, Ibuprofen also has a considerable anti-inflammatory effect.
Entity comparison is a widely used functionality available in many information systems, such as product comparison websites.
Entity comparison is a widely used functionality available in many information systems, such as universities.
However, comparison depends on a fixed set of aspects to compare.
However, comparison is typically domain-specific.
In this paper, we propose a formal framework for domain-independent entity comparison over RDF graphs.
We model differences between entities as SPARQL queries satisfying certain additional properties, and propose algorithms for computing certain additional properties.
We model similarities between entities as SPARQL queries satisfying certain additional properties, and propose algorithms for computing certain additional properties.