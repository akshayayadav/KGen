Real-time processing of emanating from sensors is becoming a common task in Internet of Things scenarios.
The key implementation goal consists supporting advanced data analytics services like anomaly detection.
The key implementation goal consists in efficiently handling massive incoming data streams.
In an on-going, industrial project, a 24 7 available stream processing engine usually faces dynamically changing data.
In an on-going, industrial project, a 24 7 available stream processing engine usually faces dynamically changing workload characteristics.
These changes impact a 24 7 available stream processing engine usually performance.
These changes impact a 24 7 available stream processing engine usually reliability.
We propose Strider, a hybrid adaptive distributed RDF Stream Processing engine that optimizes logical query plan according to the state of data streams.
Strider, a hybrid adaptive distributed RDF Stream Processing engine that optimizes logical query plan according to the state of data streams has been designed to guarantee important industrial properties such as scalability, high availability, fault tolerance, high throughput and acceptable latency.
These guarantees are obtained by designing a 24 7 available stream processing engine usually architecture with state-of-the-art Apache components such as Spark.
These guarantees are obtained by designing a 24 7 available stream processing engine usually architecture with state-of-the-art Apache components such as Kafka.
We highlight the efficiency of Strider on real-world and synthetic data sets.