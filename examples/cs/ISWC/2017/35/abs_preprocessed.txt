In this paper, we present an empirical comparison of user performance and perceived usability for Sparql versus SemwidgQL, a path-oriented Rdf query language.
We developed SemwidgQL to facilitate the formulation of Rdf queries.
We developed SemwidgQL to enable web authors to integrate Linked Data into standard web applications.
We developed SemwidgQL to facilitate the formulation of Rdf queries.
We developed SemwidgQL to enable web authors to integrate other semantic data sources into standard web applications.
We developed SemwidgQL to facilitate the formulation of Rdf queries.
We developed SemwidgQL to enable non-specialist developers to integrate Linked Data into standard web applications.
We developed SemwidgQL to enable non-specialist developers to integrate other semantic data sources into standard web applications.
We developed SemwidgQL to facilitate the formulation of Rdf queries.
We performed a user study in which participants wrote a set of queries in both languages.
We measured both objective performance to a set of questionnaire items.
We measured both subjective responses to a set of questionnaire items.
Results indicate that SemwidgQL is easier to learn, more efficient.
Results indicate that SemwidgQL is easier to learn, preferred by learners.
To assess the applicability of SemwidgQL in real applications, we analyzed its expressiveness based on a large corpus of observed Sparql queries, showing that the language covers more than 90percent of performed on Linked Data.