0	"present"	local:AM-LOC	"this paper"
0	"present"	vn.role:Agent	"we"
0	"present"	vn.role:Theme	"sprefql, an extension of the sparql language that allows appending a `` prefer '' clause that expresses ` soft ' preferences over the query results obtained by the main body of the query."
0	"allows"	vn.role:Agent	"the sparql language"
0	"allows"	vn.role:Theme	"appending a `` prefer '' clause that expresses ` soft ' preferences over the query results obtained by the main body of the query."
0	"appending"	vn.role:Patient	"`` prefer '' clause that expresses ` soft ' preferences over the query results obtained by the main body of the query."
0	"expresses"	vn.role:Theme	"`` prefer '' clause"
0	"expresses"	vn.role:Agent	"` soft ' preferences over the query results obtained by the main body of the query."
0	"obtained"	vn.role:Asset	"the main body of the query."
1	"allows"	vn.role:Agent	"the sparql language"
1	"allows"	vn.role:Theme	"appending a `` prefer '' clause that expresses ` soft ' preferences over the query does not add expressivity and any sprefql query can be transformed to an equivalent standard sparql query."
1	"appending"	vn.role:Patient	"`` prefer '' clause that expresses ` soft ' preferences over the query does not add expressivity and any sprefql query"
1	"expresses"	vn.role:Theme	"`` prefer '' clause"
1	"expresses"	vn.role:Agent	"` soft ' preferences over the query does not add expressivity and any sprefql query can be transformed to an equivalent standard sparql query."
1	"not add"	vn.role:Agent	"extension of the sparql language that allows appending a `` prefer '' clause that expresses ` soft ' preferences over the query"
1	"not add"	vn.role:Patient	"expressivity and any sprefql query can be transformed to an equivalent standard sparql query."
1	"can transformed"	vn.role:Patient	"extension of the sparql language that allows appending a `` prefer '' clause that expresses ` soft ' preferences over the query does not add expressivity and any sprefql query"
1	"can transformed"	vn.role:Product	"equivalent standard sparql query."
2	"separating"	local:AM-ADV	"clearly"
2	"separating"	vn.role:Agent	"however,"
2	"separating"	vn.role:Theme	"preferences from the ` hard ' patterns and filters in the `` where '' clause gives queries where the intention of the client"
2	"gives"	vn.role:Asset	"however, clearly separating preferences from the ` hard ' patterns and filters in the `` where '' clause"
2	"expressed,"	local:AM-MNR	"more cleanly"
3	"separating"	local:AM-ADV	"clearly"
3	"separating"	vn.role:Agent	"however,"
3	"separating"	vn.role:Theme	"preferences from the ` hard ' patterns and filters in the `` where '' clause gives queries where the intention of the client"
3	"gives"	vn.role:Asset	"however, clearly separating preferences from the ` hard ' patterns and filters in the `` where '' clause"
3	"expressed,"	local:AM-MNR	"more cleanly"
4	"present"	local:AM-LOC	"this paper"
4	"present"	vn.role:Agent	"we"
4	"present"	vn.role:Theme	"sprefql"
4	"define"	local:AM-LOC	"this paper we present sprefql"
4	"define"	local:AM-MNR	"formally"
4	"define"	vn.role:Agent	"we"
4	"define"	vn.role:Theme	"the syntax and the semantics of an extension of the sparql language that allows appending a `` prefer '' clause that expresses ` soft ' preferences over the query and we also provide empirical evidence that optimizations specific to sprefql improve run-time efficiency by comparison to the usually applied optimizations on the equivalent standard sparql query."
4	"allows"	vn.role:Agent	"extension of the sparql language"
4	"allows"	vn.role:Theme	"appending a `` prefer '' clause that expresses ` soft ' preferences over the query"
4	"appending"	vn.role:Patient	"`` prefer '' clause that expresses ` soft ' preferences over the query"
4	"expresses"	vn.role:Theme	"`` prefer '' clause"
4	"expresses"	vn.role:Agent	"` soft ' preferences over the query"
4	"provide"	local:AM-DIS	"also"
4	"provide"	vn.role:Recipient	"we"
4	"provide"	vn.role:Agent	"empirical evidence that optimizations specific to sprefql improve run-time efficiency by comparison to the usually applied optimizations on the equivalent standard sparql query."
4	"improve"	vn.role:Agent	"optimizations specific to sprefql"
4	"improve"	vn.role:Patient	"run-time efficiency by comparison to the usually applied optimizations on the equivalent standard sparql query."
4	"applied"	local:AM-TMP	"usually"
4	"applied"	vn.role:Theme	"optimizations"
4	"applied"	vn.role:Recipient	"the equivalent standard sparql query."
0	"query"	local:partOf	"query results"
0	"present"	local:partOf	"present sprefql"
0	"present sprefql"	rdfs:subClassOf	"sprefql"
0	"main body"	rdfs:subClassOf	"body"
0	"sparql"	local:partOf	"sparql language"
0	"query results"	rdfs:subClassOf	"results"
0	"main"	local:partOf	"main body"
0	"sparql language"	rdfs:subClassOf	"language"
0	"soft preferences"	rdfs:subClassOf	"preferences"
0	"prefer clause"	rdfs:subClassOf	"clause"
0	"present in paper"	local:in_paper	"present"
0	"present in paper"	local:present_in	"paper"
0	"sprefql extension"	local:_extension	"sprefql"
0	"sprefql extension"	local:SPREFQL_	"extension"
0	"extension of sparql language"	local:of_sparqllanguage	"extension"
0	"extension of sparql language"	local:extension_of	"sparql language"
0	"soft preferences over query"	local:over_query	"soft preferences"
0	"soft preferences over query"	local:softpreferences_over	"query"
0	"query results obtained"	local:_obtained	"query results"
0	"query results obtained"	local:queryresults_	"obtained"
0	"obtained by main body"	local:by_mainbody	"obtained"
0	"obtained by main body"	local:obtained_by	"main body"
0	"main body of query"	local:of_query	"main body"
0	"main body of query"	local:mainbody_of	"query"
1	"sparql query"	rdfs:subClassOf	"query"
1	"sparql"	local:partOf	"sparql query"
1	"sprefql"	local:partOf	"sprefql query"
1	"standard"	local:partOf	"standard sparql"
1	"standard sparql"	rdfs:subClassOf	"sparql"
1	"equivalent standard sparql"	local:partOf	"equivalent standard sparql query"
1	"equivalent standard sparql"	rdfs:subClassOf	"sparql"
1	"equivalent"	local:partOf	"equivalent standard"
1	"equivalent standard"	rdfs:subClassOf	"standard"
1	"standard sparql"	local:partOf	"standard sparql query"
1	"equivalent standard sparql query"	rdfs:subClassOf	"query"
1	"standard sparql query"	rdfs:subClassOf	"query"
1	"sprefql query"	rdfs:subClassOf	"query"
1	"sparql"	local:partOf	"sparql language"
1	"equivalent standard"	local:partOf	"equivalent standard sparql"
1	"sparql language"	rdfs:subClassOf	"language"
1	"standard sparql query"	rdfs:subClassOf	"sparql query"
1	"equivalent standard sparql query"	rdfs:subClassOf	"standard sparql query"
1	"can transformed"	rdfs:subClassOf	"transformed"
1	"not add"	rdfs:subClassOf	"add"
1	"does not add"	rdfs:subClassOf	"not add"
1	"soft preferences"	rdfs:subClassOf	"preferences"
1	"prefer clause"	rdfs:subClassOf	"clause"
1	"extension of sparql language"	local:of_sparqllanguage	"extension"
1	"extension of sparql language"	local:extension_of	"sparql language"
1	"soft preferences over equivalent standard sparql query"	local:over_equivalentstandardsparqlquery	"soft preferences"
1	"soft preferences over equivalent standard sparql query"	local:softpreferences_over	"equivalent standard sparql query"
1	"can transformed to equivalent standard sparql query"	local:to_equivalentstandardsparqlquery	"can transformed"
1	"can transformed to equivalent standard sparql query"	local:cantransformed_to	"equivalent standard sparql query"
2	"machine"	local:partOf	"machine optimization"
2	"machine optimization"	rdfs:subClassOf	"optimization"
2	"cleanly expressed"	rdfs:subClassOf	"expressed"
2	"more cleanly"	rdfs:subClassOf	"cleanly"
2	"where expressed"	rdfs:subClassOf	"expressed"
2	"where clause"	rdfs:subClassOf	"clause"
2	"hard patterns"	rdfs:subClassOf	"patterns"
2	"separating preferences"	rdfs:subClassOf	"preferences"
2	"clearly separating"	rdfs:subClassOf	"separating"
2	"however gives"	rdfs:subClassOf	"gives"
2	"separating preferences from hard patterns"	local:from_hardpatterns	"separating preferences"
2	"separating preferences from hard patterns"	local:separatingpreferences_from	"hard patterns"
2	"separating preferences from hard patterns from filters"	local:from_filters	"separating preferences from hard patterns"
2	"separating preferences from hard patterns from filters"	local:separatingpreferencesfromhardpatterns_from	"filters"
2	"hard patterns in where clause"	local:in_WHEREclause	"hard patterns"
2	"hard patterns in where clause"	local:hardpatterns_in	"where clause"
2	"intention of client"	local:of_client	"intention"
2	"intention of client"	local:intention_of	"client"
2	"advantage for machine optimization"	local:for_machineoptimization	"advantage"
2	"advantage for machine optimization"	local:advantage_for	"machine optimization"
3	"human readability"	rdfs:subClassOf	"readability"
3	"human"	local:partOf	"human readability"
3	"cleanly expressed"	rdfs:subClassOf	"expressed"
3	"more cleanly"	rdfs:subClassOf	"cleanly"
3	"where expressed"	rdfs:subClassOf	"expressed"
3	"where clause"	rdfs:subClassOf	"clause"
3	"hard patterns"	rdfs:subClassOf	"patterns"
3	"separating preferences"	rdfs:subClassOf	"preferences"
3	"clearly separating"	rdfs:subClassOf	"separating"
3	"however gives"	rdfs:subClassOf	"gives"
3	"separating preferences from hard patterns"	local:from_hardpatterns	"separating preferences"
3	"separating preferences from hard patterns"	local:separatingpreferences_from	"hard patterns"
3	"separating preferences from hard patterns from filters"	local:from_filters	"separating preferences from hard patterns"
3	"separating preferences from hard patterns from filters"	local:separatingpreferencesfromhardpatterns_from	"filters"
3	"hard patterns in where clause"	local:in_WHEREclause	"hard patterns"
3	"hard patterns in where clause"	local:hardpatterns_in	"where clause"
3	"intention of client"	local:of_client	"intention"
3	"intention of client"	local:intention_of	"client"
3	"advantage for human readability"	local:for_humanreadability	"advantage"
3	"advantage for human readability"	local:advantage_for	"human readability"
4	"sparql query"	rdfs:subClassOf	"query"
4	"sparql"	local:partOf	"sparql query"
4	"empirical evidence"	rdfs:subClassOf	"evidence"
4	"standard"	local:partOf	"standard sparql"
4	"standard sparql"	rdfs:subClassOf	"sparql"
4	"equivalent standard sparql"	local:partOf	"equivalent standard sparql query"
4	"present"	local:partOf	"present sprefql"
4	"equivalent standard sparql"	rdfs:subClassOf	"sparql"
4	"equivalent"	local:partOf	"equivalent standard"
4	"run-time"	local:partOf	"run-time efficiency"
4	"equivalent standard"	rdfs:subClassOf	"standard"
4	"run-time efficiency"	rdfs:subClassOf	"efficiency"
4	"standard sparql"	local:partOf	"standard sparql query"
4	"equivalent standard sparql query"	rdfs:subClassOf	"query"
4	"present sprefql"	rdfs:subClassOf	"sprefql"
4	"standard sparql query"	rdfs:subClassOf	"query"
4	"sparql"	local:partOf	"sparql language"
4	"empirical"	local:partOf	"empirical evidence"
4	"equivalent standard"	local:partOf	"equivalent standard sparql"
4	"sparql language"	rdfs:subClassOf	"language"
4	"standard sparql query"	rdfs:subClassOf	"sparql query"
4	"equivalent standard sparql query"	rdfs:subClassOf	"standard sparql query"
4	"applied optimizations"	rdfs:subClassOf	"optimizations"
4	"usually applied"	rdfs:subClassOf	"applied"
4	"specific optimizations"	rdfs:subClassOf	"optimizations"
4	"also provide"	rdfs:subClassOf	"provide"
4	"soft preferences"	rdfs:subClassOf	"preferences"
4	"prefer clause"	rdfs:subClassOf	"clause"
4	"formally define"	rdfs:subClassOf	"define"
4	"present in paper"	local:in_paper	"present"
4	"present in paper"	local:present_in	"paper"
4	"semantics of extension"	local:of_extension	"semantics"
4	"semantics of extension"	local:semantics_of	"extension"
4	"extension of sparql language"	local:of_sparqllanguage	"extension"
4	"extension of sparql language"	local:extension_of	"sparql language"
4	"soft preferences over equivalent standard sparql query"	local:over_equivalentstandardsparqlquery	"soft preferences"
4	"soft preferences over equivalent standard sparql query"	local:softpreferences_over	"equivalent standard sparql query"
4	"improve by comparison"	local:by_comparison	"improve"
4	"improve by comparison"	local:improve_by	"comparison"
4	"comparison to specific optimizations"	local:to_specificoptimizations	"comparison"
4	"comparison to specific optimizations"	local:comparison_to	"specific optimizations"
4	"specific optimizations on equivalent standard sparql query"	local:on_equivalentstandardsparqlquery	"specific optimizations"
4	"specific optimizations on equivalent standard sparql query"	local:specificoptimizations_on	"equivalent standard sparql query"
