In this paper, we discuss optimisations of rule-based materialisation approaches for reasoning over large static RDF datasets.
terminological data which has been shown in related works.
We generalise what We call the “ partial-indexing ” approach to scalable rule-based materialisation: the `` partial-indexing '' approach to scalable rule-based materialisation is based on a separation of terminological data to enable highly scalable in so doing, We provide some completeness propositions with respect to semi-naïve evaluation.
We re-formalise what We call the “ partial-indexing ” approach to scalable rule-based materialisation: the `` partial-indexing '' approach to scalable rule-based materialisation is based on a separation of terminological data to distributable reasoning for specific rulesets in so doing, We provide some completeness propositions with respect to semi-naïve evaluation.
We re-formalise what We call the “ partial-indexing ” approach to scalable rule-based materialisation: the `` partial-indexing '' approach to scalable rule-based materialisation is based on a separation of terminological data to enable highly scalable in so doing, We provide some completeness propositions with respect to semi-naïve evaluation.
We generalise what We call the “ partial-indexing ” approach to scalable rule-based materialisation: the `` partial-indexing '' approach to scalable rule-based materialisation is based on a separation of terminological data to distributable reasoning for specific rulesets in so doing, We provide some completeness propositions with respect to semi-naïve evaluation.
terminological data which has been shown in previous works.
T-Box-specific dynamic rulesets created by binding the terminological patterns in the static ruleset–.
We then show how related work on template rules– T-Box-specific dynamic rulesets can be incorporated for the partial-indexing approach.
We then show how related work on template rules– T-Box-specific dynamic rulesets can be optimised for the partial-indexing approach.
methods using OWL 2 RL.
methods using LUBM for RDFS.
We evaluate We methods.
thereafter demonstrate pragmatic distributed reasoning over 1.12 billion Linked Data statements for a subset of OWL 2 RLRDF rules we argue to be suitable for Web reasoning.
methods using OWL Horst ).
methods using pD ).