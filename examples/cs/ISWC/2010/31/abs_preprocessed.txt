sources using structural query features.
In order to quickly answer queries in environments with distributed RDFOWL, we present a query optimization algorithm to identify the potentially relevant Semantic Web data sources.
sources using a term index.
In order to effectively answer queries in environments with distributed RDFOWL, we present a query optimization algorithm to identify the potentially relevant Semantic Web data sources.
these two patterns treated independently.
a query optimization algorithm is based on the observation that the join selectivity of a pair of query triple patterns is often higher than the overall selectivity of these two patterns.
a rule goal tree that expresses the reformulation of a conjunctive query.
Given a rule goal tree a query optimization algorithm uses a bottom-up approach to estimate the selectivity of each node.
a query optimization algorithm then prioritizes loading of selective nodes and uses the information from these sources to further constrain other nodes.
Finally.
we use an OWL reasoner to answer queries over the selected sources.
the selected sources.
the selected sources corresponding ontologies.
system using a subset of the real-world Billion Triple Challenge data.
system using both a synthetic data set data.
we have evaluated we system.