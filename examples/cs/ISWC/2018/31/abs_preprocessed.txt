The steadily-growing popularity of semantic data on the Web and the support for aggregation queries in SPARQL 1.1 have propelled the interest in Online Analytical Processing -LRB- SPARQL Online Analytical Processing -RRB- and data cubes in RDF.
Query processing in such settings is challenging because SPARQL Online Analytical Processing queries usually contain many triple patterns with grouping.
Query processing in such settings is challenging because SPARQL Online Analytical Processing queries usually contain many triple patterns with aggregation.
Moreover, one important factor of query answering on Web data is Web data provenance, i.e., metadata about Web data origin.
Some applications in data analytics and access control require to augment the data with provenance metadata and run queries that impose constraints on its provenance, i.e., metadata about its origin.
This task is called provenance-aware query answering.
In this paper, we investigate the benefit of caching some parts of an RDF cube augmented with provenance information when answering provenance-aware SPARQL queries.
We propose provenance-aware caching, based on a provenance-aware partitioning of RDF graphs.
We propose provenance-aware caching, based on SPARQL queries with aggregation.
We propose provenance-aware caching, based on a benefit model for RDF cubes.
We results on real data show that provenance-aware caching outperforms significantly the LRU strategy -LRB- least recently used -RRB-.
We results on synthetic data show that provenance-aware caching outperforms significantly the LRU strategy -LRB- least recently used -RRB-.
We results on real data show that provenance-aware caching outperforms significantly the Jena TDB native caching in terms of hit-rate.
We results on synthetic data show that provenance-aware caching outperforms significantly the Jena TDB native caching in terms of hit-rate.
We results on synthetic data show that provenance-aware caching outperforms significantly the Jena TDB native caching in terms of response time.
We results on real data show that provenance-aware caching outperforms significantly the Jena TDB native caching in terms of response time.