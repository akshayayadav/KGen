0	"paper despite complexity"	local:despite_complexity	"paper"
0	"paper despite complexity"	local:paper_despite	"complexity"
0	"propose"	local:AM-ADV	"paper despite complexity"
0	"propose"	vn.role:Agent	"we"
0	"canonicalised query"	rdfs:subClassOf	"query"
0	"sparql"	rdfs:member	"sparql queries"
0	"canonicalised"	rdfs:member	"canonicalised query"
0	"syntactic"	rdfs:member	"syntactic canonicalisation"
0	"sparql queries"	rdfs:subClassOf	"queries"
0	"syntactic canonicalisation"	rdfs:subClassOf	"canonicalisation"
0	"not change"	rdfs:subClassOf	"change"
0	"will not change"	rdfs:subClassOf	"not change"
0	"syntactic canonicalisation of sparql queries"	local:of_sparqlqueries	"syntactic canonicalisation"
0	"syntactic canonicalisation of sparql queries"	local:syntacticcanonicalisation_of	"sparql queries"
0	"answers for canonicalised query"	local:for_canonicalisedquery	"answers"
0	"answers for canonicalised query"	local:answers_for	"canonicalised query"
0	"will not change versus original"	local:versus_original	"will not change"
0	"will not change versus original"	local:willnotchange_versus	"original"
0	"propose"	vn.role:Topic	"algorithm"
0	"performs"	vn.role:Agent	"algorithm"
0	"canonicalised query"	rdfs:subClassOf	"query"
0	"sparql"	rdfs:member	"sparql queries"
0	"canonicalised"	rdfs:member	"canonicalised query"
0	"syntactic"	rdfs:member	"syntactic canonicalisation"
0	"sparql queries"	rdfs:subClassOf	"queries"
0	"syntactic canonicalisation"	rdfs:subClassOf	"canonicalisation"
0	"not change"	rdfs:subClassOf	"change"
0	"will not change"	rdfs:subClassOf	"not change"
0	"syntactic canonicalisation of sparql queries"	local:of_sparqlqueries	"syntactic canonicalisation"
0	"syntactic canonicalisation of sparql queries"	local:syntacticcanonicalisation_of	"sparql queries"
0	"answers for canonicalised query"	local:for_canonicalisedquery	"answers"
0	"answers for canonicalised query"	local:answers_for	"canonicalised query"
0	"will not change versus original"	local:versus_original	"will not change"
0	"will not change versus original"	local:willnotchange_versus	"original"
0	"performs"	vn.role:Theme	"syntactic canonicalisation of sparql queries"
0	"syntactic"	rdfs:member	"syntactic canonicalisation"
0	"syntactic canonicalisation"	rdfs:subClassOf	"canonicalisation"
0	"queries"	vn.role:Agent	"syntactic canonicalisation"
0	"queries"	vn.role:Agent	"sparql"
0	"queries"	vn.role:Theme	"such"
0	"canonicalised query"	rdfs:subClassOf	"query"
0	"canonicalised"	rdfs:member	"canonicalised query"
0	"not change"	rdfs:subClassOf	"change"
0	"will not change"	rdfs:subClassOf	"not change"
0	"answers for canonicalised query"	local:for_canonicalisedquery	"answers"
0	"answers for canonicalised query"	local:answers_for	"canonicalised query"
0	"will not change versus original"	local:versus_original	"will not change"
0	"will not change versus original"	local:willnotchange_versus	"original"
0	"queries"	vn.role:Theme	"will not change versus original"
0	"canonicalised query"	rdfs:subClassOf	"query"
0	"sparql"	rdfs:member	"sparql queries"
0	"canonicalised"	rdfs:member	"canonicalised query"
0	"syntactic"	rdfs:member	"syntactic canonicalisation"
0	"sparql queries"	rdfs:subClassOf	"queries"
0	"syntactic canonicalisation"	rdfs:subClassOf	"canonicalisation"
0	"propose despite complexity"	local:despite_complexity	"propose"
0	"propose despite complexity"	local:propose_despite	"complexity"
0	"propose despite complexity in paper"	local:in_paper	"propose despite complexity"
0	"propose despite complexity in paper"	local:proposedespitecomplexity_in	"paper"
0	"syntactic canonicalisation of sparql queries"	local:of_sparqlqueries	"syntactic canonicalisation"
0	"syntactic canonicalisation of sparql queries"	local:syntacticcanonicalisation_of	"sparql queries"
0	"answers for canonicalised query"	local:for_canonicalisedquery	"answers"
0	"answers for canonicalised query"	local:answers_for	"canonicalised query"
0	"change"	local:AM-ADV	"propose despite complexity in paper"
0	"change"	local:AM-MOD	"will"
0	"change"	local:AM-NEG	"not"
0	"change"	local:AM-ADV	"original"
1	"guarantee"	vn.role:Agent	"we"
1	"guarantee"	local:AM-MOD	"can"
1	"monotone queries"	rdfs:subClassOf	"queries"
1	"sparql monotone"	rdfs:member	"sparql monotone queries"
1	"sparql monotone"	rdfs:subClassOf	"monotone"
1	"core fragment"	rdfs:subClassOf	"fragment"
1	"core"	rdfs:member	"core fragment"
1	"sparql monotone queries"	rdfs:subClassOf	"queries"
1	"monotone"	rdfs:member	"monotone queries"
1	"sparql"	rdfs:member	"sparql monotone"
1	"two queries"	rdfs:subClassOf	"queries"
1	"only equivalent"	rdfs:subClassOf	"equivalent"
1	"sparql monotone queries"	rdfs:subClassOf	"monotone queries"
1	"two queries"	rdfs:subClassOf	"queries"
1	"canonicalisation of two queries"	local:of_twoqueries	"canonicalisation"
1	"canonicalisation of two queries"	local:canonicalisation_of	"two queries"
1	"two queries within core fragment"	local:within_corefragment	"two queries"
1	"two queries within core fragment"	local:twoqueries_within	"core fragment"
1	"core fragment of sparql monotone queries"	local:of_sparqlmonotonequeries	"core fragment"
1	"core fragment of sparql monotone queries"	local:corefragment_of	"sparql monotone queries"
1	"sparql monotone queries with select"	local:with_select	"sparql monotone queries"
1	"sparql monotone queries with select"	local:sparqlmonotonequeries_with	"select"
1	"guarantee"	vn.role:Theme	"equal"
2	"support"	vn.role:Theme	"we"
2	"support"	local:AM-DIS	"also"
2	"sparql features"	rdfs:subClassOf	"features"
2	"sparql"	rdfs:member	"sparql features"
2	"support"	vn.role:Experiencer	"sparql features"
2	"weaker soundness"	rdfs:member	"weaker soundness guarantee"
2	"soundness"	rdfs:member	"soundness guarantee"
2	"input query"	rdfs:subClassOf	"query"
2	"input"	rdfs:member	"input query"
2	"weaker"	rdfs:member	"weaker soundness"
2	"soundness guarantee"	rdfs:subClassOf	"guarantee"
2	"weaker soundness"	rdfs:subClassOf	"soundness"
2	"weaker soundness guarantee"	rdfs:subClassOf	"guarantee"
2	"weaker soundness guarantee"	rdfs:subClassOf	"soundness guarantee"
2	"equivalent to input query"	local:to_inputquery	"equivalent"
2	"equivalent to input query"	local:equivalent_to	"input query"
2	"support"	local:AM-ADV	"equivalent to input query"
3	"guarantee"	vn.role:Agent	"we"
3	"guarantee"	local:AM-MOD	"can"
3	"monotone queries"	rdfs:subClassOf	"queries"
3	"sparql monotone"	rdfs:member	"sparql monotone queries"
3	"sparql monotone"	rdfs:subClassOf	"monotone"
3	"core fragment"	rdfs:subClassOf	"fragment"
3	"core"	rdfs:member	"core fragment"
3	"sparql monotone queries"	rdfs:subClassOf	"queries"
3	"monotone"	rdfs:member	"monotone queries"
3	"sparql"	rdfs:member	"sparql monotone"
3	"two queries"	rdfs:subClassOf	"queries"
3	"only equivalent"	rdfs:subClassOf	"equivalent"
3	"sparql monotone queries"	rdfs:subClassOf	"monotone queries"
3	"two queries"	rdfs:subClassOf	"queries"
3	"canonicalisation of two queries"	local:of_twoqueries	"canonicalisation"
3	"canonicalisation of two queries"	local:canonicalisation_of	"two queries"
3	"two queries within core fragment"	local:within_corefragment	"two queries"
3	"two queries within core fragment"	local:twoqueries_within	"core fragment"
3	"core fragment of sparql monotone queries"	local:of_sparqlmonotonequeries	"core fragment"
3	"core fragment of sparql monotone queries"	local:corefragment_of	"sparql monotone queries"
3	"sparql monotone queries with project"	local:with_project	"sparql monotone queries"
3	"sparql monotone queries with project"	local:sparqlmonotonequeries_with	"project"
3	"guarantee"	vn.role:Theme	"equal"
4	"support"	vn.role:Theme	"we"
4	"support"	local:AM-DIS	"also"
4	"sparql features"	rdfs:subClassOf	"features"
4	"sparql"	rdfs:member	"sparql features"
4	"support"	vn.role:Experiencer	"sparql features"
4	"weaker soundness"	rdfs:member	"weaker soundness guarantee"
4	"soundness"	rdfs:member	"soundness guarantee"
4	"input query"	rdfs:subClassOf	"query"
4	"input"	rdfs:member	"input query"
4	"weaker"	rdfs:member	"weaker soundness"
4	"soundness guarantee"	rdfs:subClassOf	"guarantee"
4	"weaker soundness"	rdfs:subClassOf	"soundness"
4	"weaker soundness guarantee"	rdfs:subClassOf	"guarantee"
4	"weaker soundness guarantee"	rdfs:subClassOf	"soundness guarantee"
4	"equivalent to input query"	local:to_inputquery	"equivalent"
4	"equivalent to input query"	local:equivalent_to	"input query"
4	"support"	local:AM-ADV	"equivalent to input query"
5	"guarantee"	vn.role:Agent	"we"
5	"guarantee"	local:AM-MOD	"can"
5	"monotone queries"	rdfs:subClassOf	"queries"
5	"sparql monotone"	rdfs:member	"sparql monotone queries"
5	"sparql monotone"	rdfs:subClassOf	"monotone"
5	"core fragment"	rdfs:subClassOf	"fragment"
5	"core"	rdfs:member	"core fragment"
5	"sparql monotone queries"	rdfs:subClassOf	"queries"
5	"monotone"	rdfs:member	"monotone queries"
5	"sparql"	rdfs:member	"sparql monotone"
5	"two queries"	rdfs:subClassOf	"queries"
5	"only equivalent"	rdfs:subClassOf	"equivalent"
5	"sparql monotone queries"	rdfs:subClassOf	"monotone queries"
5	"two queries"	rdfs:subClassOf	"queries"
5	"canonicalisation of two queries"	local:of_twoqueries	"canonicalisation"
5	"canonicalisation of two queries"	local:canonicalisation_of	"two queries"
5	"two queries within core fragment"	local:within_corefragment	"two queries"
5	"two queries within core fragment"	local:twoqueries_within	"core fragment"
5	"core fragment of sparql monotone queries"	local:of_sparqlmonotonequeries	"core fragment"
5	"core fragment of sparql monotone queries"	local:corefragment_of	"sparql monotone queries"
5	"canonicalisation of two queries with join"	local:with_join	"canonicalisation of two queries"
5	"canonicalisation of two queries with join"	local:canonicalisationoftwoqueries_with	"join"
5	"guarantee"	vn.role:Theme	"equal"
6	"support"	vn.role:Theme	"we"
6	"support"	local:AM-DIS	"also"
6	"sparql features"	rdfs:subClassOf	"features"
6	"sparql"	rdfs:member	"sparql features"
6	"support"	vn.role:Experiencer	"sparql features"
6	"weaker soundness"	rdfs:member	"weaker soundness guarantee"
6	"soundness"	rdfs:member	"soundness guarantee"
6	"input query"	rdfs:subClassOf	"query"
6	"input"	rdfs:member	"input query"
6	"weaker"	rdfs:member	"weaker soundness"
6	"soundness guarantee"	rdfs:subClassOf	"guarantee"
6	"weaker soundness"	rdfs:subClassOf	"soundness"
6	"weaker soundness guarantee"	rdfs:subClassOf	"guarantee"
6	"weaker soundness guarantee"	rdfs:subClassOf	"soundness guarantee"
6	"equivalent to input query"	local:to_inputquery	"equivalent"
6	"equivalent to input query"	local:equivalent_to	"input query"
6	"support"	local:AM-ADV	"equivalent to input query"
7	"guarantee"	vn.role:Agent	"we"
7	"guarantee"	local:AM-MOD	"can"
7	"monotone queries"	rdfs:subClassOf	"queries"
7	"sparql monotone"	rdfs:member	"sparql monotone queries"
7	"sparql monotone"	rdfs:subClassOf	"monotone"
7	"core fragment"	rdfs:subClassOf	"fragment"
7	"core"	rdfs:member	"core fragment"
7	"sparql monotone queries"	rdfs:subClassOf	"queries"
7	"monotone"	rdfs:member	"monotone queries"
7	"sparql"	rdfs:member	"sparql monotone"
7	"two queries"	rdfs:subClassOf	"queries"
7	"only equivalent"	rdfs:subClassOf	"equivalent"
7	"sparql monotone queries"	rdfs:subClassOf	"monotone queries"
7	"two queries"	rdfs:subClassOf	"queries"
7	"canonicalisation of two queries"	local:of_twoqueries	"canonicalisation"
7	"canonicalisation of two queries"	local:canonicalisation_of	"two queries"
7	"two queries within core fragment"	local:within_corefragment	"two queries"
7	"two queries within core fragment"	local:twoqueries_within	"core fragment"
7	"core fragment of sparql monotone queries"	local:of_sparqlmonotonequeries	"core fragment"
7	"core fragment of sparql monotone queries"	local:corefragment_of	"sparql monotone queries"
7	"sparql monotone queries with union"	local:with_union	"sparql monotone queries"
7	"sparql monotone queries with union"	local:sparqlmonotonequeries_with	"union"
7	"guarantee"	vn.role:Theme	"equal"
8	"support"	vn.role:Theme	"we"
8	"support"	local:AM-DIS	"also"
8	"sparql features"	rdfs:subClassOf	"features"
8	"sparql"	rdfs:member	"sparql features"
8	"support"	vn.role:Experiencer	"sparql features"
8	"weaker soundness"	rdfs:member	"weaker soundness guarantee"
8	"soundness"	rdfs:member	"soundness guarantee"
8	"input query"	rdfs:subClassOf	"query"
8	"input"	rdfs:member	"input query"
8	"weaker"	rdfs:member	"weaker soundness"
8	"soundness guarantee"	rdfs:subClassOf	"guarantee"
8	"weaker soundness"	rdfs:subClassOf	"soundness"
8	"weaker soundness guarantee"	rdfs:subClassOf	"guarantee"
8	"weaker soundness guarantee"	rdfs:subClassOf	"soundness guarantee"
8	"equivalent to input query"	local:to_inputquery	"equivalent"
8	"equivalent to input query"	local:equivalent_to	"input query"
8	"support"	local:AM-ADV	"equivalent to input query"
9	"equivalence"	rdfs:member	"equivalence problem"
9	"equivalence problem"	rdfs:subClassOf	"problem"
9	"must harder"	rdfs:subClassOf	"harder"
9	"must harder than equivalence problem"	local:than_equivalenceproblem	"must harder"
9	"must harder than equivalence problem"	local:mustharder_than	"equivalence problem"
9	"show"	local:AM-ADV	"fact"
9	"show"	vn.role:Agent	"we"
9	"canonicalised query"	rdfs:subClassOf	"query"
9	"sparql"	rdfs:member	"sparql queries"
9	"sparql endpoint logs"	rdfs:subClassOf	"logs"
9	"sparql endpoint"	rdfs:member	"sparql endpoint logs"
9	"endpoint logs"	rdfs:subClassOf	"logs"
9	"endpoint"	rdfs:member	"endpoint logs"
9	"canonicalised"	rdfs:member	"canonicalised query"
9	"sparql endpoint"	rdfs:subClassOf	"endpoint"
9	"real-world queries"	rdfs:subClassOf	"queries"
9	"syntactic"	rdfs:member	"syntactic canonicalisation"
9	"sparql queries"	rdfs:subClassOf	"queries"
9	"sparql"	rdfs:member	"sparql endpoint"
9	"syntactic canonicalisation"	rdfs:subClassOf	"canonicalisation"
9	"real-world"	rdfs:member	"real-world queries"
9	"further change"	rdfs:subClassOf	"change"
9	"sparql endpoint logs"	rdfs:subClassOf	"endpoint logs"
9	"not further change"	rdfs:subClassOf	"further change"
9	"will not further change"	rdfs:subClassOf	"not further change"
9	"syntactic canonicalisation of sparql queries"	local:of_sparqlqueries	"syntactic canonicalisation"
9	"syntactic canonicalisation of sparql queries"	local:syntacticcanonicalisation_of	"sparql queries"
9	"answers for canonicalised query"	local:for_canonicalisedquery	"answers"
9	"answers for canonicalised query"	local:answers_for	"canonicalised query"
9	"will not further change versus original"	local:versus_original	"will not further change"
9	"will not further change versus original"	local:willnotfurtherchange_versus	"original"
9	"practical for real-world queries"	local:for_real-worldqueries	"practical"
9	"practical for real-world queries"	local:practical_for	"real-world queries"
9	"real-world queries taken"	local:_taken	"real-world queries"
9	"real-world queries taken"	local:real-worldqueries_	"taken"
9	"taken from sparql endpoint logs"	local:from_sparqlendpointlogs	"taken"
9	"taken from sparql endpoint logs"	local:taken_from	"sparql endpoint logs"
9	"show"	vn.role:Theme	"algorithm"
9	"show"	vn.role:Theme	"show"
9	"algorithm algorithm"	rdfs:subClassOf	"algorithm"
9	"equivalent"	rdfs:member	"equivalent queries"
9	"purely purely syntactic syntactic"	rdfs:subClassOf	"syntactic"
9	"purely purely syntactic syntactic methods"	rdfs:subClassOf	"methods"
9	"query"	rdfs:member	"query query"
9	"sparql queries"	rdfs:member	"sparql queries queries"
9	"syntactic syntactic"	rdfs:subClassOf	"syntactic"
9	"sparql sparql queries"	rdfs:subClassOf	"queries"
9	"sparql queries queries"	rdfs:subClassOf	"queries"
9	"algorithm"	rdfs:member	"algorithm algorithm"
9	"sparql sparql queries"	rdfs:member	"sparql sparql queries queries"
9	"original"	rdfs:member	"original original"
9	"canonicalised canonicalised query"	rdfs:member	"canonicalised canonicalised query query"
9	"canonicalised canonicalised"	rdfs:subClassOf	"canonicalised"
9	"answers"	rdfs:member	"answers answers"
9	"original original"	rdfs:subClassOf	"original"
9	"more equivalent equivalent queries queries"	rdfs:subClassOf	"queries"
9	"canonicalisation"	rdfs:member	"canonicalisation canonicalisation"
9	"sparql"	rdfs:member	"sparql sparql"
9	"canonicalised query"	rdfs:subClassOf	"query"
9	"equivalent"	rdfs:member	"equivalent equivalent"
9	"equivalent equivalent"	rdfs:subClassOf	"equivalent"
9	"equivalent equivalent queries"	rdfs:subClassOf	"queries"
9	"purely"	rdfs:member	"purely purely"
9	"syntactic methods"	rdfs:subClassOf	"methods"
9	"syntactic"	rdfs:member	"syntactic methods"
9	"equivalent equivalent queries queries"	rdfs:subClassOf	"queries"
9	"answers answers"	rdfs:subClassOf	"answers"
9	"syntactic syntactic canonicalisation canonicalisation"	rdfs:subClassOf	"canonicalisation"
9	"purely purely syntactic syntactic"	rdfs:member	"purely purely syntactic syntactic methods"
9	"sparql queries"	rdfs:subClassOf	"queries"
9	"sparql sparql"	rdfs:member	"sparql sparql queries"
9	"query query"	rdfs:subClassOf	"query"
9	"queries"	rdfs:member	"queries queries"
9	"equivalent queries"	rdfs:subClassOf	"queries"
9	"more equivalent equivalent queries"	rdfs:member	"more equivalent equivalent queries queries"
9	"sparql sparql"	rdfs:subClassOf	"sparql"
9	"syntactic canonicalisation canonicalisation"	rdfs:subClassOf	"canonicalisation"
9	"syntactic syntactic canonicalisation"	rdfs:member	"syntactic syntactic canonicalisation canonicalisation"
9	"syntactic canonicalisation"	rdfs:subClassOf	"canonicalisation"
9	"purely purely"	rdfs:subClassOf	"purely"
9	"canonicalised"	rdfs:member	"canonicalised canonicalised"
9	"canonicalised canonicalised"	rdfs:member	"canonicalised canonicalised query"
9	"syntactic syntactic methods"	rdfs:subClassOf	"methods"
9	"purely purely syntactic"	rdfs:subClassOf	"syntactic"
9	"purely"	rdfs:member	"purely syntactic"
9	"purely purely syntactic"	rdfs:member	"purely purely syntactic syntactic"
9	"purely purely"	rdfs:member	"purely purely syntactic"
9	"purely syntactic syntactic"	rdfs:member	"purely syntactic syntactic methods"
9	"more equivalent equivalent queries"	rdfs:subClassOf	"queries"
9	"queries queries"	rdfs:subClassOf	"queries"
9	"more equivalent"	rdfs:member	"more equivalent equivalent"
9	"original original"	rdfs:member	"original original detects"
9	"canonicalised canonicalised query"	rdfs:subClassOf	"query"
9	"canonicalised query"	rdfs:member	"canonicalised query query"
9	"syntactic canonicalisation"	rdfs:member	"syntactic canonicalisation canonicalisation"
9	"canonicalised query query"	rdfs:subClassOf	"query"
9	"syntactic syntactic canonicalisation"	rdfs:subClassOf	"canonicalisation"
9	"purely syntactic syntactic methods"	rdfs:subClassOf	"methods"
9	"original"	rdfs:member	"original detects"
9	"syntactic"	rdfs:member	"syntactic syntactic"
9	"more equivalent equivalent"	rdfs:member	"more equivalent equivalent queries"
9	"equivalent queries"	rdfs:member	"equivalent queries queries"
9	"more equivalent"	rdfs:subClassOf	"equivalent"
9	"sparql"	rdfs:member	"sparql queries"
9	"syntactic syntactic"	rdfs:member	"syntactic syntactic methods"
9	"canonicalised canonicalised query query"	rdfs:subClassOf	"query"
9	"equivalent equivalent"	rdfs:member	"equivalent equivalent queries"
9	"canonicalised"	rdfs:member	"canonicalised query"
9	"equivalent equivalent queries"	rdfs:member	"equivalent equivalent queries queries"
9	"original detects"	rdfs:subClassOf	"detects"
9	"sparql sparql queries queries"	rdfs:subClassOf	"queries"
9	"syntactic"	rdfs:member	"syntactic canonicalisation"
9	"original original detects"	rdfs:subClassOf	"detects"
9	"more equivalent equivalent"	rdfs:subClassOf	"equivalent"
9	"syntactic syntactic"	rdfs:member	"syntactic syntactic canonicalisation"
9	"purely syntactic"	rdfs:subClassOf	"syntactic"
9	"more"	rdfs:member	"more equivalent"
9	"purely syntactic syntactic"	rdfs:subClassOf	"syntactic"
9	"canonicalisation canonicalisation"	rdfs:subClassOf	"canonicalisation"
9	"purely syntactic"	rdfs:member	"purely syntactic syntactic"
9	"equivalent queries queries"	rdfs:subClassOf	"queries"
9	"syntactic syntactic methods"	rdfs:subClassOf	"syntactic methods"
9	"purely purely syntactic"	rdfs:subClassOf	"purely syntactic"
9	"when compared"	rdfs:subClassOf	"compared"
9	"when when compared"	rdfs:subClassOf	"when compared"
9	"equivalent queries queries"	rdfs:subClassOf	"queries queries"
9	"equivalent equivalent queries queries"	rdfs:subClassOf	"equivalent queries queries"
9	"more more"	rdfs:subClassOf	"more"
9	"not change"	rdfs:subClassOf	"change"
9	"not not change"	rdfs:subClassOf	"not change"
9	"will not not change"	rdfs:subClassOf	"not not change"
9	"will will not not change"	rdfs:subClassOf	"will not not change"
9	"canonicalised query query"	rdfs:subClassOf	"query query"
9	"canonicalised canonicalised query query"	rdfs:subClassOf	"canonicalised query query"
9	"such such"	rdfs:subClassOf	"such"
9	"such such queries"	rdfs:subClassOf	"queries"
9	"queries such such queries"	rdfs:subClassOf	"such such queries"
9	"sparql queries such such queries"	rdfs:subClassOf	"queries such such queries"
9	"sparql sparql queries such such queries"	rdfs:subClassOf	"sparql queries such such queries"
9	"syntactic canonicalisation canonicalisation"	rdfs:subClassOf	"canonicalisation canonicalisation"
9	"syntactic syntactic canonicalisation canonicalisation"	rdfs:subClassOf	"syntactic canonicalisation canonicalisation"
9	"syntactic syntactic canonicalisation canonicalisation of sparql sparql queries such such queries"	local:of_sparqlsparqlqueriessuchsuchqueries	"syntactic syntactic canonicalisation canonicalisation"
9	"syntactic syntactic canonicalisation canonicalisation of sparql sparql queries such such queries"	local:syntacticsyntacticcanonicalisationcanonicalisation_of	"sparql sparql queries such such queries"
9	"answers for canonicalised canonicalised query query"	local:for_canonicalisedcanonicalisedqueryquery	"answers"
9	"answers for canonicalised canonicalised query query"	local:answers_for	"canonicalised canonicalised query query"
9	"show"	vn.role:Theme	"methods"
9	"show"	vn.role:Theme	"algorithm algorithm"
9	"performs"	vn.role:Agent	"algorithm"
9	"sparql queries"	rdfs:subClassOf	"queries"
9	"syntactic"	rdfs:member	"syntactic canonicalisation"
9	"syntactic canonicalisation"	rdfs:subClassOf	"canonicalisation"
9	"sparql"	rdfs:member	"sparql queries"
9	"syntactic canonicalisation of sparql queries"	local:of_sparqlqueries	"syntactic canonicalisation"
9	"syntactic canonicalisation of sparql queries"	local:syntacticcanonicalisation_of	"sparql queries"
9	"performs"	vn.role:Theme	"syntactic canonicalisation of sparql queries"
9	"performs"	vn.role:Agent	"algorithm"
9	"sparql queries"	rdfs:subClassOf	"queries"
9	"syntactic"	rdfs:member	"syntactic canonicalisation"
9	"syntactic canonicalisation"	rdfs:subClassOf	"canonicalisation"
9	"sparql"	rdfs:member	"sparql queries"
9	"such queries"	rdfs:subClassOf	"queries"
9	"sparql such queries"	rdfs:subClassOf	"such queries"
9	"syntactic canonicalisation of sparql such queries"	local:of_sparqlsuchqueries	"syntactic canonicalisation"
9	"syntactic canonicalisation of sparql such queries"	local:syntacticcanonicalisation_of	"sparql such queries"
9	"performs"	vn.role:Theme	"syntactic canonicalisation of sparql such queries"
9	"syntactic"	rdfs:member	"syntactic canonicalisation"
9	"syntactic canonicalisation"	rdfs:subClassOf	"canonicalisation"
9	"queries"	vn.role:Agent	"syntactic canonicalisation"
9	"queries"	vn.role:Agent	"sparql"
9	"queries"	vn.role:Theme	"such"
9	"queries"	vn.role:Agent	"algorithm"
9	"syntactic"	rdfs:member	"syntactic canonicalisation"
9	"syntactic canonicalisation"	rdfs:subClassOf	"canonicalisation"
9	"queries"	vn.role:Agent	"syntactic canonicalisation"
9	"queries"	vn.role:Agent	"sparql"
9	"queries"	vn.role:Theme	"such"
9	"canonicalised query"	rdfs:subClassOf	"query"
9	"canonicalised"	rdfs:member	"canonicalised query"
9	"answers for canonicalised query"	local:for_canonicalisedquery	"answers"
9	"answers for canonicalised query"	local:answers_for	"canonicalised query"
9	"change"	vn.role:Patient	"answers for canonicalised query"
9	"change"	local:AM-MOD	"will"
9	"change"	local:AM-NEG	"not"
9	"canonicalised query"	rdfs:subClassOf	"query"
9	"canonicalised"	rdfs:member	"canonicalised query"
9	"answers for canonicalised query"	local:for_canonicalisedquery	"answers"
9	"answers for canonicalised query"	local:answers_for	"canonicalised query"
9	"change"	vn.role:Patient	"answers for canonicalised query"
9	"change"	local:AM-MOD	"will"
9	"change"	local:AM-NEG	"not"
9	"real-world queries"	rdfs:subClassOf	"queries"
9	"real-world"	rdfs:member	"real-world queries"
9	"taken"	vn.role:Theme	"real-world queries"
9	"sparql endpoint logs"	rdfs:subClassOf	"logs"
9	"sparql endpoint"	rdfs:member	"sparql endpoint logs"
9	"endpoint logs"	rdfs:subClassOf	"logs"
9	"endpoint"	rdfs:member	"endpoint logs"
9	"sparql endpoint"	rdfs:subClassOf	"endpoint"
9	"sparql"	rdfs:member	"sparql endpoint"
9	"sparql endpoint logs"	rdfs:subClassOf	"endpoint logs"
9	"taken"	vn.role:Source	"sparql endpoint logs"
9	"detects"	vn.role:Experiencer	"original"
9	"equivalent"	rdfs:member	"equivalent queries"
9	"purely"	rdfs:member	"purely syntactic"
9	"syntactic methods"	rdfs:subClassOf	"methods"
9	"syntactic"	rdfs:member	"syntactic methods"
9	"purely syntactic"	rdfs:member	"purely syntactic methods"
9	"purely syntactic methods"	rdfs:subClassOf	"methods"
9	"purely syntactic"	rdfs:subClassOf	"syntactic"
9	"equivalent queries"	rdfs:subClassOf	"queries"
9	"when compared"	rdfs:subClassOf	"compared"
9	"when compared with syntactic methods"	local:with_syntacticmethods	"when compared"
9	"when compared with syntactic methods"	local:whencompared_with	"syntactic methods"
9	"detects"	vn.role:Stimulus	"equivalent queries"
10	"present"	vn.role:Agent	"we"
10	"present"	local:AM-DIS	"also"
10	"difficult"	rdfs:member	"difficult cases"
10	"canonicalisation method"	rdfs:subClassOf	"method"
10	"synthetic"	rdfs:member	"synthetic queries"
10	"canonicalisation"	rdfs:member	"canonicalisation method"
10	"difficult cases"	rdfs:subClassOf	"cases"
10	"synthetic queries"	rdfs:subClassOf	"queries"
10	"results of experiments"	local:of_experiments	"results"
10	"results of experiments"	local:results_of	"experiments"
10	"experiments over synthetic queries"	local:over_syntheticqueries	"experiments"
10	"experiments over synthetic queries"	local:experiments_over	"synthetic queries"
10	"synthetic queries designed"	local:_designed	"synthetic queries"
10	"synthetic queries designed"	local:syntheticqueries_	"designed"
10	"results of experiments highlighting"	local:_highlighting	"results of experiments"
10	"results of experiments highlighting"	local:resultsofexperiments_	"highlighting"
10	"present"	vn.role:Theme	"results of experiments highlighting"
10	"synthetic queries"	rdfs:subClassOf	"queries"
10	"synthetic"	rdfs:member	"synthetic queries"
10	"designed"	vn.role:Product	"synthetic queries"
10	"difficult cases"	rdfs:subClassOf	"cases"
10	"canonicalisation method"	rdfs:subClassOf	"method"
10	"difficult"	rdfs:member	"difficult cases"
10	"canonicalisation"	rdfs:member	"canonicalisation method"
10	"designed"	vn.role:Beneficiary	"stress-test"
10	"synthetic queries"	rdfs:subClassOf	"queries"
10	"synthetic"	rdfs:member	"synthetic queries"
10	"stress-test"	vn.role:subject	"synthetic queries"
10	"canonicalisation method"	rdfs:subClassOf	"method"
10	"canonicalisation"	rdfs:member	"canonicalisation method"
10	"stress-test"	vn.role:object	"canonicalisation method"
10	"canonicalisation method"	rdfs:subClassOf	"method"
10	"canonicalisation"	rdfs:member	"canonicalisation method"
10	"highlighting"	vn.role:Agent	"canonicalisation method"
10	"difficult cases"	rdfs:subClassOf	"cases"
10	"difficult"	rdfs:member	"difficult cases"
10	"highlighting"	vn.role:Theme	"difficult cases"
