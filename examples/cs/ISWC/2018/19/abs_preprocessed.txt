Blank nodes in RDF graphs can be used to represent known to exist but whose identity remains unknown.
A prominent example of such usage can be found in the Wikidata dataset where, e.g., the author of Beowulf is given as a blank node.
However, while SPARQL considers blank nodes in a query as existentials, the author of Beowulf treats blank nodes in RDF data more like constants.
Running SPARQL queries over datasets with unknown values may thus lead to counter-intuitive results, which may make the standard SPARQL semantics unsuitable for datasets with existential blank nodes.
We thus explore the feasibility of an alternative SPARQL semantics based on certain answers.
In order to estimate the performance costs that would be associated with such a change in semantics for current implementations, we evaluate proposed in setting for a core fragment of SPARQL.
In order to estimate the performance costs that would be associated with such a change in semantics for current implementations, we adapt proposed in setting for a core fragment of SPARQL.
To further understand the impact that such a change in semantics may have on query solutions, we analyse how this new semantics would affect the results of user queries over Wikidata.