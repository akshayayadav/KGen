0	"used"	local:AM-ADV	"increasingly"
0	"used"	local:AM-LOC	"applications,"
0	"used"	vn.role:Theme	"large-scale knowledge graphs"
0	"growing"	vn.role:Location	"need"
0	"can support"	local:AM-MNR	"effectively"
0	"can support"	vn.role:Theme	"tools"
0	"can support"	vn.role:Experiencer	"users in analysis and exploration tasks."
1	"describe"	local:AM-MNR	"informative way"
1	"describe"	vn.role:Agent	"entity comparison--"
1	"describe"	vn.role:Theme	"the similarities between two given entities as described in a knowledge graph."
1	"described"	local:AM-LOC	"knowledge graph."
2	"modelled"	local:AM-LOC	"our previous work"
2	"modelled"	local:AM-TMP	"part of the answer over the input graph; for instance, one can describe the similarity between two companies such as telenor in the yago graph as asking for all telecom companies based in europe."
2	"modelled"	vn.role:Theme	"the result of entity comparison as a similarity query-- that is, a sparql query having the input entities"
2	"having"	vn.role:Experiencer	"sparql query"
2	"having"	vn.role:Stimulus	"the input entities"
2	"can describe"	vn.role:Agent	"the input graph; for instance, one"
2	"can describe"	vn.role:Theme	"the similarity between two companies such as telenor in the yago graph as asking for all telecom companies based in europe."
2	"asking"	vn.role:Recipient	"for all telecom companies based in europe."
2	"based"	local:AM-LOC	"europe."
2	"based"	vn.role:Cause	"all telecom companies"
3	"modelled"	local:AM-LOC	"our previous work"
3	"modelled"	local:AM-TMP	"part of the answer over the input graph; for instance, one can describe the similarity between two companies such as vodafone in the yago graph as asking for all telecom companies based in europe."
3	"modelled"	vn.role:Theme	"the result of entity comparison"
3	"having"	vn.role:Experiencer	"sparql query"
3	"having"	vn.role:Stimulus	"the input entities"
3	"can describe"	vn.role:Agent	"the input graph; for instance, one"
3	"can describe"	vn.role:Theme	"the similarity between two companies such as vodafone in the yago graph as asking for all telecom companies based in europe."
3	"asking"	vn.role:Recipient	"for all telecom companies based in europe."
3	"based"	local:AM-LOC	"europe."
3	"based"	vn.role:Cause	"all telecom companies"
4	"extend"	local:AM-LOC	"this paper,"
4	"extend"	vn.role:Theme	"the results of our prior work in different ways."
5	"expand"	local:AM-PNC	"consider a richer fragment of allowing for numeric filter expressions;"
5	"expand"	vn.role:Agent	"first,"
5	"expand"	vn.role:Patient	"the language of similarity queries"
5	"consider"	vn.role:Theme	"richer fragment of allowing for numeric filter expressions;"
5	"allowing"	vn.role:Theme	"for numeric filter expressions; this enables our to express that telenor are also similar in that vodafone both have at least 30,000 employees."
5	"enables"	vn.role:Agent	"richer fragment of allowing for numeric filter expressions; this"
5	"enables"	vn.role:Patient	"our to express that telenor are also similar in that vodafone both have at least 30,000 employees."
5	"express"	vn.role:Theme	"our"
5	"express"	vn.role:Agent	"that telenor are also similar in that vodafone both have at least 30,000 employees."
5	"have"	local:AM-ADV	"both"
5	"have"	vn.role:Experiencer	"vodafone"
5	"have"	vn.role:Stimulus	"least 30,000 employees."
6	"expand"	local:AM-PNC	"consider a richer fragment of allowing for numeric filter expressions; this"
6	"expand"	vn.role:Agent	"first,"
6	"expand"	vn.role:Patient	"the language of similarity queries"
6	"consider"	vn.role:Theme	"richer fragment of allowing for numeric filter expressions;"
6	"allowing"	vn.role:Theme	"for numeric filter expressions; this enables our to express that telenor are also similar in that telenor both have at least 30,000 employees."
6	"enables"	vn.role:Agent	"richer fragment of allowing for numeric filter expressions; this"
6	"enables"	vn.role:Patient	"our to express that telenor are also similar in that telenor both have at least 30,000 employees."
6	"express"	vn.role:Theme	"our"
6	"express"	vn.role:Agent	"that telenor are also similar in that telenor both have at least 30,000 employees."
6	"have"	local:AM-ADV	"both"
6	"have"	vn.role:Experiencer	"telenor"
6	"have"	vn.role:Stimulus	"least 30,000 employees."
7	"expand"	local:AM-PNC	"consider a richer fragment of allowing for numeric filter expressions; this enables our to express that vodafone are also similar in that telenor both have at least 30,000 employees."
7	"expand"	vn.role:Agent	"first,"
7	"expand"	vn.role:Patient	"the language of similarity queries"
7	"consider"	vn.role:Theme	"richer fragment of allowing for numeric filter expressions;"
7	"allowing"	vn.role:Theme	"for numeric filter expressions; this enables our to express that vodafone are also similar in that telenor both have at least 30,000 employees."
7	"enables"	vn.role:Agent	"richer fragment of allowing for numeric filter expressions; this"
7	"enables"	vn.role:Patient	"our to express that vodafone are also similar in that telenor both have at least 30,000 employees."
7	"express"	vn.role:Theme	"our"
7	"express"	vn.role:Agent	"that vodafone are also similar in that telenor both have at least 30,000 employees."
7	"have"	local:AM-ADV	"both"
7	"have"	vn.role:Experiencer	"telenor"
7	"have"	vn.role:Stimulus	"least 30,000 employees."
8	"expand"	local:AM-PNC	"consider a richer fragment of allowing for numeric filter expressions;"
8	"expand"	vn.role:Agent	"first,"
8	"expand"	vn.role:Patient	"the language of similarity queries"
8	"consider"	vn.role:Theme	"richer fragment of allowing for numeric filter expressions;"
8	"allowing"	vn.role:Theme	"for numeric filter expressions; this enables our to express that vodafone are also similar in that vodafone both have at least 30,000 employees."
8	"enables"	vn.role:Agent	"richer fragment of allowing for numeric filter expressions; this"
8	"enables"	vn.role:Patient	"our to express that vodafone are also similar in that vodafone both have at least 30,000 employees."
8	"express"	vn.role:Theme	"our"
8	"express"	vn.role:Agent	"that vodafone are also similar in that vodafone both have at least 30,000 employees."
8	"have"	local:AM-ADV	"both"
8	"have"	vn.role:Experiencer	"vodafone"
8	"have"	vn.role:Stimulus	"least 30,000 employees."
9	"propose"	local:AM-TMP	"then"
9	"propose"	vn.role:Agent	"we"
9	"propose"	vn.role:Topic	"algorithms for satisfying certain additional desirable properties, such as being as specific as possible."
9	"satisfying"	vn.role:Experiencer	"algorithms"
9	"satisfying"	vn.role:Cause	"certain additional desirable properties, such as being as specific as possible."
10	"propose"	local:AM-DIS	"also"
10	"propose"	vn.role:Agent	"we"
10	"propose"	vn.role:Topic	"scalable algorithm that is guaranteed to compute a similarity query, but not necessarily a most specific one."
10	"implement"	local:AM-DIS	"also"
10	"implement"	vn.role:Agent	"we"
10	"implement"	vn.role:Theme	"scalable algorithm that is guaranteed to compute a similarity query, but not necessarily a most specific one."
10	"guaranteed"	vn.role:Theme	"scalable algorithm to compute a similarity query, but not necessarily a most specific one."
10	"compute"	vn.role:Agent	"scalable algorithm"
10	"compute"	vn.role:Product	"similarity query, but not necessarily a most specific one."
0	"large-scale knowledge"	local:partOf	"large-scale knowledge graphs"
0	"exploration"	local:partOf	"exploration tasks"
0	"large-scale knowledge"	rdfs:subClassOf	"knowledge"
0	"large-scale"	local:partOf	"large-scale knowledge"
0	"knowledge graphs"	rdfs:subClassOf	"graphs"
0	"exploration tasks"	rdfs:subClassOf	"tasks"
0	"large-scale knowledge graphs"	rdfs:subClassOf	"graphs"
0	"knowledge"	local:partOf	"knowledge graphs"
0	"effectively support"	rdfs:subClassOf	"support"
0	"can effectively support"	rdfs:subClassOf	"effectively support"
0	"growing need"	rdfs:subClassOf	"need"
0	"increasingly used"	rdfs:subClassOf	"used"
0	"are increasingly used"	rdfs:subClassOf	"increasingly used"
0	"large-scale knowledge graphs"	rdfs:subClassOf	"knowledge graphs"
0	"are increasingly used in applications"	local:in_applications	"are increasingly used"
0	"are increasingly used in applications"	local:areincreasinglyused_in	"applications"
0	"growing need for tools"	local:for_tools	"growing need"
0	"growing need for tools"	local:growingneed_for	"tools"
0	"can effectively support in analysis"	local:in_analysis	"can effectively support"
0	"can effectively support in analysis"	local:caneffectivelysupport_in	"analysis"
0	"can effectively support in analysis in exploration tasks"	local:in_explorationtasks	"can effectively support in analysis"
0	"can effectively support in analysis in exploration tasks"	local:caneffectivelysupportinanalysis_in	"exploration tasks"
1	"knowledge"	local:partOf	"knowledge graph"
1	"such important task"	rdfs:subClassOf	"task"
1	"important"	local:partOf	"important task"
1	"such important"	local:partOf	"such important task"
1	"knowledge graph"	rdfs:subClassOf	"graph"
1	"informative"	local:partOf	"informative way"
1	"entity comparison"	rdfs:subClassOf	"comparison"
1	"such important"	rdfs:subClassOf	"important"
1	"important task"	rdfs:subClassOf	"task"
1	"entity"	local:partOf	"entity comparison"
1	"informative way"	rdfs:subClassOf	"way"
1	"such"	local:partOf	"such important"
1	"given entities"	rdfs:subClassOf	"entities"
1	"two given entities"	rdfs:subClassOf	"given entities"
1	"such important task"	rdfs:subClassOf	"important task"
1	"one such important task"	rdfs:subClassOf	"such important task"
1	"describe in informative way"	local:in_informativeway	"describe"
1	"describe in informative way"	local:describe_in	"informative way"
1	"similarities between two given entities"	local:between_twogivenentities	"similarities"
1	"similarities between two given entities"	local:similarities_between	"two given entities"
1	"described in knowledge graph"	local:in_knowledgegraph	"described"
1	"described in knowledge graph"	local:described_in	"knowledge graph"
2	"telecom companies"	rdfs:subClassOf	"companies"
2	"yago graph"	rdfs:subClassOf	"graph"
2	"previous work"	rdfs:subClassOf	"work"
2	"input entities"	rdfs:subClassOf	"entities"
2	"sparql query"	rdfs:subClassOf	"query"
2	"telecom"	local:partOf	"telecom companies"
2	"entity comparison"	rdfs:subClassOf	"comparison"
2	"similarity query"	rdfs:subClassOf	"query"
2	"similarity"	local:partOf	"similarity query"
2	"input graph"	rdfs:subClassOf	"graph"
2	"previous"	local:partOf	"previous work"
2	"sparql"	local:partOf	"sparql query"
2	"entity"	local:partOf	"entity comparison"
2	"input"	local:partOf	"input entities"
2	"yago"	local:partOf	"yago graph"
2	"input"	local:partOf	"input graph"
2	"two companies"	rdfs:subClassOf	"companies"
2	"can describe"	rdfs:subClassOf	"describe"
2	"similarity sparql query"	rdfs:subClassOf	"sparql query"
2	"our previous work"	rdfs:subClassOf	"previous work"
2	"modelled in our previous work"	local:in_ourpreviouswork	"modelled"
2	"modelled in our previous work"	local:modelled_in	"our previous work"
2	"result of entity comparison"	local:of_entitycomparison	"result"
2	"result of entity comparison"	local:result_of	"entity comparison"
2	"modelled in our previous work as similarity sparql query"	local:as_similaritySPARQLquery	"modelled in our previous work"
2	"modelled in our previous work as similarity sparql query"	local:modelledinourpreviouswork_as	"similarity sparql query"
2	"similarity sparql query having"	local:_having	"similarity sparql query"
2	"similarity sparql query having"	local:similaritySPARQLquery_	"having"
2	"having as part"	local:as_part	"having"
2	"having as part"	local:having_as	"part"
2	"part of answer"	local:of_answer	"part"
2	"part of answer"	local:part_of	"answer"
2	"answer over input graph"	local:over_inputgraph	"answer"
2	"answer over input graph"	local:answer_over	"input graph"
2	"can describe for instance"	local:for_instance	"can describe"
2	"can describe for instance"	local:candescribe_for	"instance"
2	"similarity between telecom companies"	local:between_telecomcompanies	"similarity"
2	"similarity between telecom companies"	local:similarity_between	"telecom companies"
2	"telecom companies such_as telenor"	local:such_as_Telenor	"telecom companies"
2	"telecom companies such_as telenor"	local:telecomcompanies_such_as	"telenor"
2	"telenor in input graph"	local:in_inputgraph	"telenor"
2	"telenor in input graph"	local:Telenor_in	"input graph"
2	"asking for telecom companies such_as telenor"	local:for_telecomcompaniessuch_asTelenor	"asking"
2	"asking for telecom companies such_as telenor"	local:asking_for	"telecom companies such_as telenor"
2	"telecom companies such_as telenor based"	local:_based	"telecom companies such_as telenor"
2	"telecom companies such_as telenor based"	local:telecomcompaniessuch_asTelenor_	"based"
2	"based in europe"	local:in_Europe	"based"
2	"based in europe"	local:based_in	"europe"
3	"telecom companies"	rdfs:subClassOf	"companies"
3	"yago graph"	rdfs:subClassOf	"graph"
3	"previous work"	rdfs:subClassOf	"work"
3	"input entities"	rdfs:subClassOf	"entities"
3	"sparql query"	rdfs:subClassOf	"query"
3	"telecom"	local:partOf	"telecom companies"
3	"entity comparison"	rdfs:subClassOf	"comparison"
3	"similarity query"	rdfs:subClassOf	"query"
3	"similarity"	local:partOf	"similarity query"
3	"input graph"	rdfs:subClassOf	"graph"
3	"previous"	local:partOf	"previous work"
3	"sparql"	local:partOf	"sparql query"
3	"entity"	local:partOf	"entity comparison"
3	"input"	local:partOf	"input entities"
3	"yago"	local:partOf	"yago graph"
3	"input"	local:partOf	"input graph"
3	"two companies"	rdfs:subClassOf	"companies"
3	"can describe"	rdfs:subClassOf	"describe"
3	"similarity sparql query"	rdfs:subClassOf	"sparql query"
3	"our previous work"	rdfs:subClassOf	"previous work"
3	"modelled in our previous work"	local:in_ourpreviouswork	"modelled"
3	"modelled in our previous work"	local:modelled_in	"our previous work"
3	"result of entity comparison"	local:of_entitycomparison	"result"
3	"result of entity comparison"	local:result_of	"entity comparison"
3	"modelled in our previous work as similarity sparql query"	local:as_similaritySPARQLquery	"modelled in our previous work"
3	"modelled in our previous work as similarity sparql query"	local:modelledinourpreviouswork_as	"similarity sparql query"
3	"similarity sparql query having"	local:_having	"similarity sparql query"
3	"similarity sparql query having"	local:similaritySPARQLquery_	"having"
3	"having as part"	local:as_part	"having"
3	"having as part"	local:having_as	"part"
3	"part of answer"	local:of_answer	"part"
3	"part of answer"	local:part_of	"answer"
3	"answer over input graph"	local:over_inputgraph	"answer"
3	"answer over input graph"	local:answer_over	"input graph"
3	"can describe for instance"	local:for_instance	"can describe"
3	"can describe for instance"	local:candescribe_for	"instance"
3	"similarity between telecom companies"	local:between_telecomcompanies	"similarity"
3	"similarity between telecom companies"	local:similarity_between	"telecom companies"
3	"telecom companies such_as vodafone"	local:such_as_Vodafone	"telecom companies"
3	"telecom companies such_as vodafone"	local:telecomcompanies_such_as	"vodafone"
3	"vodafone in input graph"	local:in_inputgraph	"vodafone"
3	"vodafone in input graph"	local:Vodafone_in	"input graph"
3	"asking for telecom companies such_as vodafone"	local:for_telecomcompaniessuch_asVodafone	"asking"
3	"asking for telecom companies such_as vodafone"	local:asking_for	"telecom companies such_as vodafone"
3	"telecom companies such_as vodafone based"	local:_based	"telecom companies such_as vodafone"
3	"telecom companies such_as vodafone based"	local:telecomcompaniessuch_asVodafone_	"based"
3	"based in europe"	local:in_Europe	"based"
3	"based in europe"	local:based_in	"europe"
4	"prior"	local:partOf	"prior work"
4	"prior work"	rdfs:subClassOf	"work"
4	"different ways"	rdfs:subClassOf	"ways"
4	"different"	local:partOf	"different ways"
4	"our prior work"	rdfs:subClassOf	"prior work"
4	"extend in paper"	local:in_paper	"extend"
4	"extend in paper"	local:extend_in	"paper"
4	"results of our prior work"	local:of_ourpriorwork	"results"
4	"results of our prior work"	local:results_of	"our prior work"
4	"our prior work in different ways"	local:in_differentways	"our prior work"
4	"our prior work in different ways"	local:ourpriorwork_in	"different ways"
5	"richer fragment"	rdfs:subClassOf	"fragment"
5	"similarity queries"	rdfs:subClassOf	"queries"
5	"numeric filter"	local:partOf	"numeric filter expressions"
5	"richer"	local:partOf	"richer fragment"
5	"numeric filter expressions"	rdfs:subClassOf	"expressions"
5	"similarity"	local:partOf	"similarity queries"
5	"filter"	local:partOf	"filter expressions"
5	"numeric"	local:partOf	"numeric filter"
5	"numeric filter"	rdfs:subClassOf	"filter"
5	"filter expressions"	rdfs:subClassOf	"expressions"
5	"30,000 employees"	rdfs:subClassOf	"employees"
5	"least 30,000"	rdfs:subClassOf	"30,000"
5	"also similar"	rdfs:subClassOf	"similar"
5	"numeric filter expressions"	rdfs:subClassOf	"filter expressions"
5	"first expand"	rdfs:subClassOf	"expand"
5	"language of similarity queries"	local:of_similarityqueries	"language"
5	"language of similarity queries"	local:language_of	"similarity queries"
5	"allowing for numeric filter expressions"	local:for_numericfilterexpressions	"allowing"
5	"allowing for numeric filter expressions"	local:allowing_for	"numeric filter expressions"
5	"also similar in vodafone"	local:in_Vodafone	"also similar"
5	"also similar in vodafone"	local:alsosimilar_in	"vodafone"
6	"richer fragment"	rdfs:subClassOf	"fragment"
6	"similarity queries"	rdfs:subClassOf	"queries"
6	"numeric filter"	local:partOf	"numeric filter expressions"
6	"richer"	local:partOf	"richer fragment"
6	"numeric filter expressions"	rdfs:subClassOf	"expressions"
6	"similarity"	local:partOf	"similarity queries"
6	"filter"	local:partOf	"filter expressions"
6	"numeric"	local:partOf	"numeric filter"
6	"numeric filter"	rdfs:subClassOf	"filter"
6	"filter expressions"	rdfs:subClassOf	"expressions"
6	"30,000 employees"	rdfs:subClassOf	"employees"
6	"least 30,000"	rdfs:subClassOf	"30,000"
6	"also similar"	rdfs:subClassOf	"similar"
6	"numeric filter expressions"	rdfs:subClassOf	"filter expressions"
6	"first expand"	rdfs:subClassOf	"expand"
6	"language of similarity queries"	local:of_similarityqueries	"language"
6	"language of similarity queries"	local:language_of	"similarity queries"
6	"allowing for numeric filter expressions"	local:for_numericfilterexpressions	"allowing"
6	"allowing for numeric filter expressions"	local:allowing_for	"numeric filter expressions"
6	"also similar in telenor"	local:in_Telenor	"also similar"
6	"also similar in telenor"	local:alsosimilar_in	"telenor"
7	"richer fragment"	rdfs:subClassOf	"fragment"
7	"similarity queries"	rdfs:subClassOf	"queries"
7	"numeric filter"	local:partOf	"numeric filter expressions"
7	"richer"	local:partOf	"richer fragment"
7	"numeric filter expressions"	rdfs:subClassOf	"expressions"
7	"similarity"	local:partOf	"similarity queries"
7	"filter"	local:partOf	"filter expressions"
7	"numeric"	local:partOf	"numeric filter"
7	"numeric filter"	rdfs:subClassOf	"filter"
7	"filter expressions"	rdfs:subClassOf	"expressions"
7	"30,000 employees"	rdfs:subClassOf	"employees"
7	"least 30,000"	rdfs:subClassOf	"30,000"
7	"also similar"	rdfs:subClassOf	"similar"
7	"numeric filter expressions"	rdfs:subClassOf	"filter expressions"
7	"first expand"	rdfs:subClassOf	"expand"
7	"language of similarity queries"	local:of_similarityqueries	"language"
7	"language of similarity queries"	local:language_of	"similarity queries"
7	"allowing for numeric filter expressions"	local:for_numericfilterexpressions	"allowing"
7	"allowing for numeric filter expressions"	local:allowing_for	"numeric filter expressions"
7	"also similar in telenor"	local:in_Telenor	"also similar"
7	"also similar in telenor"	local:alsosimilar_in	"telenor"
8	"richer fragment"	rdfs:subClassOf	"fragment"
8	"similarity queries"	rdfs:subClassOf	"queries"
8	"numeric filter"	local:partOf	"numeric filter expressions"
8	"richer"	local:partOf	"richer fragment"
8	"numeric filter expressions"	rdfs:subClassOf	"expressions"
8	"similarity"	local:partOf	"similarity queries"
8	"filter"	local:partOf	"filter expressions"
8	"numeric"	local:partOf	"numeric filter"
8	"numeric filter"	rdfs:subClassOf	"filter"
8	"filter expressions"	rdfs:subClassOf	"expressions"
8	"30,000 employees"	rdfs:subClassOf	"employees"
8	"least 30,000"	rdfs:subClassOf	"30,000"
8	"also similar"	rdfs:subClassOf	"similar"
8	"numeric filter expressions"	rdfs:subClassOf	"filter expressions"
8	"first expand"	rdfs:subClassOf	"expand"
8	"language of similarity queries"	local:of_similarityqueries	"language"
8	"language of similarity queries"	local:language_of	"similarity queries"
8	"allowing for numeric filter expressions"	local:for_numericfilterexpressions	"allowing"
8	"allowing for numeric filter expressions"	local:allowing_for	"numeric filter expressions"
8	"also similar in vodafone"	local:in_Vodafone	"also similar"
8	"also similar in vodafone"	local:alsosimilar_in	"vodafone"
9	"certain additional desirable properties"	rdfs:subClassOf	"properties"
9	"desirable properties"	rdfs:subClassOf	"properties"
9	"additional desirable"	rdfs:subClassOf	"desirable"
9	"additional"	local:partOf	"additional desirable"
9	"certain additional"	local:partOf	"certain additional desirable"
9	"certain additional desirable"	local:partOf	"certain additional desirable properties"
9	"additional desirable"	local:partOf	"additional desirable properties"
9	"desirable"	local:partOf	"desirable properties"
9	"certain additional"	rdfs:subClassOf	"additional"
9	"certain additional desirable"	rdfs:subClassOf	"desirable"
9	"additional desirable properties"	rdfs:subClassOf	"properties"
9	"certain"	local:partOf	"certain additional"
9	"as specific"	rdfs:subClassOf	"specific"
9	"additional desirable properties"	rdfs:subClassOf	"desirable properties"
9	"certain additional desirable properties"	rdfs:subClassOf	"additional desirable properties"
9	"then propose"	rdfs:subClassOf	"propose"
10	"scalable algorithm"	rdfs:subClassOf	"algorithm"
10	"such algorithms"	rdfs:subClassOf	"algorithms"
10	"such"	local:partOf	"such algorithms"
10	"similarity query"	rdfs:subClassOf	"query"
10	"similarity"	local:partOf	"similarity query"
10	"scalable"	local:partOf	"scalable algorithm"
10	"specific one"	rdfs:subClassOf	"one"
10	"most specific"	rdfs:subClassOf	"specific"
10	"necessarily one"	rdfs:subClassOf	"one"
10	"not necessarily one"	rdfs:subClassOf	"necessarily one"
10	"also propose"	rdfs:subClassOf	"propose"
10	"hence also propose"	rdfs:subClassOf	"also propose"
10	"however impractical"	rdfs:subClassOf	"impractical"
