0	"proposed"	vn.role:Topic	"many methods"
0	"extend"	local:AM-MNR	"automatically"
0	"extend"	vn.role:Agent	"many methods"
0	"extend"	vn.role:Theme	"knowledge bases, but the vast majority of many methods focus on finding plausible knowledge graph triples in particular."
0	"focus"	vn.role:Experiencer	"many methods"
0	"finding"	local:AM-LOC	"particular."
0	"finding"	vn.role:Theme	"plausible knowledge graph triples"
1	"proposed"	vn.role:Topic	"many methods"
1	"extend"	local:AM-MNR	"automatically"
1	"extend"	vn.role:Agent	"many methods"
1	"extend"	vn.role:Theme	"knowledge bases, but the vast majority of many methods focus on finding plausible missing facts graph triples in particular."
1	"focus"	vn.role:Experiencer	"many methods"
1	"finding"	local:AM-LOC	"particular."
1	"finding"	vn.role:Theme	"plausible missing facts graph triples"
1	"missing"	vn.role:Theme	"facts"
2	"focus"	local:AM-LOC	"this paper,"
2	"focus"	local:AM-DIS	"instead"
2	"focus"	vn.role:Experiencer	"we"
2	"extending"	local:AM-MNR	"automatically"
2	"extending"	vn.role:Theme	"ontologies that are encoded as a set of existential rules."
2	"encoded"	vn.role:Patient	"ontologies as a set of existential rules."
3	"find"	vn.role:Agent	"we"
3	"find"	vn.role:Theme	"rules that are plausible,"
3	"not can deduced"	vn.role:Predicate	"from the given ontology."
4	"propose"	local:AM-TMP	"this end,"
4	"propose"	vn.role:Agent	"we"
4	"propose"	vn.role:Topic	"graph-based representation of rule bases."
5	"considered"	vn.role:Agent	"nodes nodes of considered graphs correspond to predicates, and nodes"
5	"considered"	vn.role:Predicate	"graphs correspond to predicates, and nodes of considered graphs graphs"
5	"correspond"	vn.role:Actor1	"nodes of considered graphs"
5	"correspond"	vn.role:Actor2	"predicates, and nodes of considered graphs are annotated with the vectors."
5	"annotated"	vn.role:Theme	"nodes of considered graphs correspond to predicates, and nodes of considered graphs"
5	"annotated"	vn.role:Destination	"with the vectors."
6	"could estimated"	vn.role:Theme	"external resources such as word embeddings the rule base itself."
6	"could estimated"	vn.role:Value	"from the rule base"
7	"could estimated"	vn.role:Theme	"external resources such as the vectors the rule base itself."
7	"could estimated"	vn.role:Value	"from the rule base"
8	"connect"	vn.role:Agent	"edges"
8	"connect"	vn.role:Patient	"predicates that co-occur in the vectors annotations reflect the types of rules in which the predicates co-occur."
8	"co-occur"	local:AM-LOC	"the vectors annotations"
8	"co-occur"	vn.role:Patient2	"predicates"
8	"reflect"	vn.role:Cause	"the types of rules in which the predicates co-occur."
9	"connect"	vn.role:Agent	"edges"
9	"connect"	vn.role:Patient	"predicates that co-occur in the same rule reflect the types of rules in which the predicates co-occur."
9	"co-occur"	vn.role:Patient2	"predicates"
9	"co-occur"	vn.role:Agent	"the same rule"
9	"reflect"	vn.role:Cause	"the types of rules in which the predicates co-occur."
10	"use"	local:AM-TMP	"then"
10	"use"	vn.role:Agent	"we"
10	"use"	vn.role:Theme	"neural network model based on graph convolutional networks"
10	"use"	vn.role:Recipient	"refine the initial vector representation of the predicates, to obtain a representation which is predictive of which rules are plausible."
10	"refine"	vn.role:Agent	"we"
10	"refine"	vn.role:Theme	"the initial vector representation of the predicates, to obtain a representation which is predictive of which rules are plausible."
11	"present"	vn.role:Agent	"we"
11	"present"	vn.role:Theme	"experimental results that demonstrate the strong performance of this method."
11	"demonstrate"	vn.role:Recipient	"experimental results"
11	"demonstrate"	vn.role:Cause	"the strong performance of this method."
0	"plausible knowledge graph triples"	rdfs:subClassOf	"triples"
0	"knowledge"	local:partOf	"knowledge bases"
0	"graph triples"	rdfs:subClassOf	"triples"
0	"plausible knowledge"	rdfs:subClassOf	"knowledge"
0	"plausible knowledge graph"	rdfs:subClassOf	"graph"
0	"knowledge graph triples"	rdfs:subClassOf	"triples"
0	"many methods"	rdfs:subClassOf	"methods"
0	"many"	local:partOf	"many methods"
0	"vast"	local:partOf	"vast majority"
0	"knowledge graph"	rdfs:subClassOf	"graph"
0	"plausible knowledge graph"	local:partOf	"plausible knowledge graph triples"
0	"knowledge"	local:partOf	"knowledge graph"
0	"knowledge graph"	local:partOf	"knowledge graph triples"
0	"knowledge bases"	rdfs:subClassOf	"bases"
0	"plausible knowledge"	local:partOf	"plausible knowledge graph"
0	"vast majority"	rdfs:subClassOf	"majority"
0	"graph"	local:partOf	"graph triples"
0	"plausible"	local:partOf	"plausible knowledge"
0	"knowledge graph triples"	rdfs:subClassOf	"graph triples"
0	"plausible knowledge graph triples"	rdfs:subClassOf	"knowledge graph triples"
0	"automatically extend"	rdfs:subClassOf	"extend"
0	"have proposed"	rdfs:subClassOf	"proposed"
0	"vast majority of many methods"	local:of_manymethods	"vast majority"
0	"vast majority of many methods"	local:vastmajority_of	"many methods"
0	"finding in particular"	local:in_particular	"finding"
0	"finding in particular"	local:finding_in	"particular"
1	"knowledge"	local:partOf	"knowledge bases"
1	"graph triples"	rdfs:subClassOf	"triples"
1	"many methods"	rdfs:subClassOf	"methods"
1	"vast"	local:partOf	"vast majority"
1	"many"	local:partOf	"many methods"
1	"knowledge bases"	rdfs:subClassOf	"bases"
1	"vast majority"	rdfs:subClassOf	"majority"
1	"graph"	local:partOf	"graph triples"
1	"missing facts"	rdfs:subClassOf	"facts"
1	"plausible missing facts"	rdfs:subClassOf	"missing facts"
1	"automatically extend"	rdfs:subClassOf	"extend"
1	"have proposed"	rdfs:subClassOf	"proposed"
1	"vast majority of many methods"	local:of_manymethods	"vast majority"
1	"vast majority of many methods"	local:vastmajority_of	"many methods"
1	"plausible missing facts in particular"	local:in_particular	"plausible missing facts"
1	"plausible missing facts in particular"	local:plausiblemissingfacts_in	"particular"
2	"existential"	local:partOf	"existential rules"
2	"existential rules"	rdfs:subClassOf	"rules"
2	"automatically extending"	rdfs:subClassOf	"extending"
2	"instead focus"	rdfs:subClassOf	"focus"
2	"instead focus in paper"	local:in_paper	"instead focus"
2	"instead focus in paper"	local:insteadfocus_in	"paper"
2	"encoded as set"	local:as_set	"encoded"
2	"encoded as set"	local:encoded_as	"set"
2	"set of existential rules"	local:of_existentialrules	"set"
2	"set of existential rules"	local:set_of	"existential rules"
3	"given ontology"	rdfs:subClassOf	"ontology"
3	"not deduced"	rdfs:subClassOf	"deduced"
3	"can not deduced"	rdfs:subClassOf	"not deduced"
3	"aim in particular"	local:in_particular	"aim"
3	"aim in particular"	local:aim_in	"particular"
3	"can not deduced from given ontology"	local:from_givenontology	"can not deduced"
3	"can not deduced from given ontology"	local:cannotdeduced_from	"given ontology"
4	"graph-based"	local:partOf	"graph-based representation"
4	"graph-based representation"	rdfs:subClassOf	"representation"
4	"rule bases"	rdfs:subClassOf	"bases"
4	"rule"	local:partOf	"rule bases"
4	"propose to end"	local:to_end	"propose"
4	"propose to end"	local:propose_to	"end"
4	"graph-based representation of rule bases"	local:of_rulebases	"graph-based representation"
4	"graph-based representation of rule bases"	local:graph-basedrepresentation_of	"rule bases"
5	"graphs"	local:partOf	"graphs correspond"
5	"graphs correspond"	rdfs:subClassOf	"correspond"
5	"considered graphs"	rdfs:subClassOf	"graphs"
5	"considered considered graphs"	rdfs:subClassOf	"considered graphs"
5	"nodes of considered considered graphs"	local:of_consideredconsideredgraphs	"nodes"
5	"nodes of considered considered graphs"	local:Nodes_of	"considered considered graphs"
5	"graphs correspond to predicates"	local:to_predicates	"graphs correspond"
5	"graphs correspond to predicates"	local:graphscorrespond_to	"predicates"
5	"nodes of considered considered graphs of considered considered graphs"	local:of_consideredconsideredgraphs	"nodes of considered considered graphs"
5	"nodes of considered considered graphs of considered considered graphs"	local:Nodesofconsideredconsideredgraphs_of	"considered considered graphs"
5	"annotated with vectors"	local:with_vectors	"annotated"
5	"annotated with vectors"	local:annotated_with	"vectors"
6	"word"	local:partOf	"word embeddings"
6	"external"	local:partOf	"external resources"
6	"rule base"	rdfs:subClassOf	"base"
6	"word embeddings"	rdfs:subClassOf	"embeddings"
6	"external resources"	rdfs:subClassOf	"resources"
6	"rule"	local:partOf	"rule base"
6	"itself base"	rdfs:subClassOf	"base"
6	"rule itself base"	rdfs:subClassOf	"itself base"
6	"rule rule itself base"	rdfs:subClassOf	"rule itself base"
6	"could estimated"	rdfs:subClassOf	"estimated"
6	"may obtained"	rdfs:subClassOf	"obtained"
6	"may obtained from external resources"	local:from_externalresources	"may obtained"
6	"may obtained from external resources"	local:mayobtained_from	"external resources"
6	"external resources such_as word embeddings"	local:such_as_wordembeddings	"external resources"
6	"external resources such_as word embeddings"	local:externalresources_such_as	"word embeddings"
6	"could estimated from rule rule itself base"	local:from_ruleruleitselfbase	"could estimated"
6	"could estimated from rule rule itself base"	local:couldestimated_from	"rule rule itself base"
7	"rule base"	rdfs:subClassOf	"base"
7	"external resources"	rdfs:subClassOf	"resources"
7	"external"	local:partOf	"external resources"
7	"rule"	local:partOf	"rule base"
7	"itself base"	rdfs:subClassOf	"base"
7	"rule itself base"	rdfs:subClassOf	"itself base"
7	"rule rule itself base"	rdfs:subClassOf	"rule itself base"
7	"could estimated"	rdfs:subClassOf	"estimated"
7	"may obtained"	rdfs:subClassOf	"obtained"
7	"may obtained from external resources"	local:from_externalresources	"may obtained"
7	"may obtained from external resources"	local:mayobtained_from	"external resources"
7	"external resources such_as vectors"	local:such_as_vectors	"external resources"
7	"external resources such_as vectors"	local:externalresources_such_as	"vectors"
7	"could estimated from rule rule itself base"	local:from_ruleruleitselfbase	"could estimated"
7	"could estimated from rule rule itself base"	local:couldestimated_from	"rule rule itself base"
8	"vectors annotations"	rdfs:subClassOf	"annotations"
8	"vectors"	local:partOf	"vectors annotations"
8	"predicates co-occur"	rdfs:subClassOf	"co-occur"
8	"reflect in vectors"	local:in_vectors	"reflect"
8	"reflect in vectors"	local:reflect_in	"vectors"
8	"types of rules"	local:of_rules	"types"
8	"types of rules"	local:types_of	"rules"
8	"rules in which"	local:in_which	"rules"
8	"rules in which"	local:rules_in	"which"
9	"same rule"	rdfs:subClassOf	"rule"
9	"same"	local:partOf	"same rule"
9	"predicates co-occur"	rdfs:subClassOf	"co-occur"
9	"predicates co-occur in same rule"	local:in_samerule	"predicates co-occur"
9	"predicates co-occur in same rule"	local:predicatesco-occur_in	"same rule"
9	"types of rules"	local:of_rules	"types"
9	"types of rules"	local:types_of	"rules"
9	"rules in which"	local:in_which	"rules"
9	"rules in which"	local:rules_in	"which"
10	"graph convolutional"	local:partOf	"graph convolutional networks"
10	"initial vector representation"	rdfs:subClassOf	"representation"
10	"neural network model"	rdfs:subClassOf	"model"
10	"neural network"	local:partOf	"neural network model"
10	"network"	local:partOf	"network model"
10	"neural"	local:partOf	"neural network"
10	"neural network"	rdfs:subClassOf	"network"
10	"network model"	rdfs:subClassOf	"model"
10	"graph convolutional"	rdfs:subClassOf	"convolutional"
10	"graph convolutional networks"	rdfs:subClassOf	"networks"
10	"initial vector"	rdfs:subClassOf	"vector"
10	"initial"	local:partOf	"initial vector"
10	"vector representation"	rdfs:subClassOf	"representation"
10	"graph"	local:partOf	"graph convolutional"
10	"initial vector"	local:partOf	"initial vector representation"
10	"convolutional"	local:partOf	"convolutional networks"
10	"convolutional networks"	rdfs:subClassOf	"networks"
10	"vector"	local:partOf	"vector representation"
10	"initial vector representation"	rdfs:subClassOf	"vector representation"
10	"graph convolutional networks"	rdfs:subClassOf	"convolutional networks"
10	"neural network model"	rdfs:subClassOf	"network model"
10	"then use"	rdfs:subClassOf	"use"
10	"neural network model based"	local:_based	"neural network model"
10	"neural network model based"	local:neuralnetworkmodel_	"based"
10	"based on graph convolutional networks"	local:on_GraphConvolutionalNetworks	"based"
10	"based on graph convolutional networks"	local:based_on	"graph convolutional networks"
10	"initial vector representation of predicates"	local:of_predicates	"initial vector representation"
10	"initial vector representation of predicates"	local:initialvectorrepresentation_of	"predicates"
10	"plausible of predictive"	local:of_predictive	"plausible"
10	"plausible of predictive"	local:plausible_of	"predictive"
11	"strong performance"	rdfs:subClassOf	"performance"
11	"experimental"	local:partOf	"experimental results"
11	"strong"	local:partOf	"strong performance"
11	"experimental results"	rdfs:subClassOf	"results"
11	"strong performance of method"	local:of_method	"strong performance"
11	"strong performance of method"	local:strongperformance_of	"method"
