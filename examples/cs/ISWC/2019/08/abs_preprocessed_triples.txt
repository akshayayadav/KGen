0	"describing"	vn.role:Agent	"the language"
0	"describing"	vn.role:Theme	"rdf graphs that has recently become a w3c recommendation."
0	"validating"	vn.role:Agent	"the language"
0	"validating"	vn.role:Theme	"rdf graphs that has recently become a w3c recommendation."
0	"become"	local:AM-TMP	"recently"
0	"become"	vn.role:Patient	"rdf graphs"
1	"gaining"	vn.role:Patient	"the language"
1	"gaining"	vn.role:Attribute	"traction"
2	"comes"	vn.role:Location	"first challenge from the fact that rdf graphs are often exposed as sparql endpoints."
2	"exposed"	local:AM-TMP	"often"
2	"exposed"	vn.role:Agent	"rdf graphs"
2	"exposed"	vn.role:Recipient	"sparql endpoints."
3	"comes"	vn.role:Location	"first challenge from the fact that rdf graphs are often therefore only accessible via queries."
5	"provide"	local:AM-LOC	"this paper,"
5	"provide"	vn.role:Recipient	"we"
5	"provide"	vn.role:Agent	"algorithms for validating a graph against a shacl schema, which can be executed over a sparql endpoint."
5	"validating"	vn.role:Agent	"algorithms"
5	"validating"	vn.role:Theme	"graph"
5	"validating"	vn.role:Location	"against a shacl schema, which can be executed over a sparql endpoint."
5	"can executed"	vn.role:Patient	"graph against a shacl schema,"
5	"can executed"	vn.role:Instrument	"over a sparql endpoint."
6	"investigate"	local:AM-TMP	"first"
6	"investigate"	vn.role:Agent	"we"
6	"investigate"	vn.role:Location	"the possibility of validating a graph through a single query for non-recursive constraints."
6	"validating"	vn.role:Theme	"graph"
6	"validating"	vn.role:Location	"through a single query for non-recursive constraints."
7	"shown"	local:AM-DIS	"then"
7	"shown"	local:AM-ADV	"for the recursive case, since the problem"
7	"shown"	vn.role:Theme	"np-hard, we propose a strategy that consists in evaluating a small number of sparql queries over the endpoint, and using the answers to build a set of propositional formulas that are passed to a sat solver."
7	"propose"	vn.role:Agent	"we"
7	"propose"	vn.role:Topic	"strategy that consists in evaluating a small number of sparql queries over the endpoint, and using the answers to build a set of propositional formulas that are passed to a sat solver."
7	"consists"	vn.role:Location	"strategy"
7	"evaluating"	vn.role:Agent	"strategy"
7	"evaluating"	vn.role:Theme	"small number of sparql queries over the endpoint,"
7	"using"	vn.role:Agent	"strategy"
7	"using"	vn.role:Theme	"the answers"
7	"using"	vn.role:Recipient	"build a set of propositional formulas that are passed to a sat solver."
7	"build"	vn.role:Material	"set of propositional formulas that are passed to a sat solver."
7	"passed"	vn.role:Theme	"propositional formulas"
7	"passed"	vn.role:Recipient	"sat solver."
8	"show"	vn.role:Agent	"we"
8	"show"	vn.role:Theme	"that the process can be optimized when dealing with recursive fragments of shacl, without the need for an external solver."
8	"can optimized"	local:AM-TMP	"when dealing with recursive fragments of shacl, without the need for an external solver."
8	"can optimized"	vn.role:Patient	"the process"
8	"dealing"	vn.role:Theme	"with recursive fragments of shacl, without the need for an external solver."
9	"show"	vn.role:Agent	"we"
9	"show"	vn.role:Theme	"that the process can be optimized when dealing with tractable fragments of shacl, without the need for an external solver."
9	"can optimized"	local:AM-TMP	"when dealing with tractable fragments of shacl, without the need for an external solver."
9	"can optimized"	vn.role:Patient	"the process"
9	"dealing"	vn.role:Theme	"with tractable fragments of shacl, without the need for an external solver."
10	"present"	local:AM-DIS	"also"
10	"present"	vn.role:Agent	"we"
10	"present"	vn.role:Theme	"proof-of-concept evaluation of this last approach."
0	"w3c recommendation"	rdfs:subClassOf	"recommendation"
0	"rdf"	local:partOf	"rdf graphs"
0	"rdf graphs"	rdfs:subClassOf	"graphs"
0	"w3c"	local:partOf	"w3c recommendation"
0	"recently become"	rdfs:subClassOf	"become"
0	"has recently become"	rdfs:subClassOf	"recently become"
1	"shacl constraint"	local:partOf	"shacl constraint validation"
1	"constraint"	local:partOf	"constraint validation"
1	"shacl constraint"	rdfs:subClassOf	"constraint"
1	"early stage"	rdfs:subClassOf	"stage"
1	"shacl"	local:partOf	"shacl constraint"
1	"early"	local:partOf	"early stage"
1	"constraint validation"	rdfs:subClassOf	"validation"
1	"shacl constraint validation"	rdfs:subClassOf	"validation"
1	"still early stage"	rdfs:subClassOf	"early stage"
1	"shacl constraint validation"	rdfs:subClassOf	"constraint validation"
1	"is gaining"	rdfs:subClassOf	"gaining"
1	"is gaining in industry"	local:in_industry	"is gaining"
1	"is gaining in industry"	local:isgaining_in	"industry"
1	"algorithms for shacl constraint validation"	local:for_shaclconstraintvalidation	"algorithms"
1	"algorithms for shacl constraint validation"	local:algorithms_for	"shacl constraint validation"
2	"rdf graphs"	rdfs:subClassOf	"graphs"
2	"sparql endpoints"	rdfs:subClassOf	"endpoints"
2	"rdf"	local:partOf	"rdf graphs"
2	"first"	local:partOf	"first challenge"
2	"sparql"	local:partOf	"sparql endpoints"
2	"first challenge"	rdfs:subClassOf	"challenge"
2	"often exposed"	rdfs:subClassOf	"exposed"
2	"comes from fact"	local:from_fact	"comes"
2	"comes from fact"	local:comes_from	"fact"
2	"often exposed as sparql endpoints"	local:as_sparqlendpoints	"often exposed"
2	"often exposed as sparql endpoints"	local:oftenexposed_as	"sparql endpoints"
3	"rdf"	local:partOf	"rdf graphs"
3	"rdf graphs"	rdfs:subClassOf	"graphs"
3	"first challenge"	rdfs:subClassOf	"challenge"
3	"first"	local:partOf	"first challenge"
3	"only accessible"	rdfs:subClassOf	"accessible"
3	"therefore only accessible"	rdfs:subClassOf	"only accessible"
3	"often therefore only accessible"	rdfs:subClassOf	"therefore only accessible"
3	"comes from fact"	local:from_fact	"comes"
3	"comes from fact"	local:comes_from	"fact"
3	"often therefore only accessible via queries"	local:via_queries	"often therefore only accessible"
3	"often therefore only accessible via queries"	local:oftenthereforeonlyaccessible_via	"queries"
4	"recursive"	local:partOf	"recursive constraints"
4	"recursive constraints"	rdfs:subClassOf	"constraints"
4	"should handled"	rdfs:subClassOf	"handled"
4	"absence of guidelines"	local:of_guidelines	"absence"
4	"absence of guidelines"	local:absence_of	"guidelines"
4	"guidelines about way"	local:about_way	"guidelines"
4	"guidelines about way"	local:guidelines_about	"way"
5	"shacl"	local:partOf	"shacl schema"
5	"shacl schema"	rdfs:subClassOf	"schema"
5	"sparql"	local:partOf	"sparql endpoint"
5	"sparql endpoint"	rdfs:subClassOf	"endpoint"
5	"can executed"	rdfs:subClassOf	"executed"
5	"provide in paper"	local:in_paper	"provide"
5	"provide in paper"	local:provide_in	"paper"
5	"validating against shacl schema"	local:against_shaclschema	"validating"
5	"validating against shacl schema"	local:validating_against	"shacl schema"
5	"can executed over sparql endpoint"	local:over_sparqlendpoint	"can executed"
5	"can executed over sparql endpoint"	local:canexecuted_over	"sparql endpoint"
6	"non-recursive constraints"	rdfs:subClassOf	"constraints"
6	"non-recursive"	local:partOf	"non-recursive constraints"
6	"single query"	rdfs:subClassOf	"query"
6	"single"	local:partOf	"single query"
6	"first investigate"	rdfs:subClassOf	"investigate"
6	"validating through single query"	local:through_singlequery	"validating"
6	"validating through single query"	local:validating_through	"single query"
6	"single query for non-recursive constraints"	local:for_non-recursiveconstraints	"single query"
6	"single query for non-recursive constraints"	local:singlequery_for	"non-recursive constraints"
7	"sat"	local:partOf	"sat solver"
7	"recursive case"	rdfs:subClassOf	"case"
7	"propositional formulas"	rdfs:subClassOf	"formulas"
7	"recursive"	local:partOf	"recursive case"
7	"propositional"	local:partOf	"propositional formulas"
7	"sparql queries"	rdfs:subClassOf	"queries"
7	"sparql"	local:partOf	"sparql queries"
7	"sat solver"	rdfs:subClassOf	"solver"
7	"small"	local:partOf	"small number"
7	"small number"	rdfs:subClassOf	"number"
7	"has shown"	rdfs:subClassOf	"shown"
7	"then recursive case"	rdfs:subClassOf	"recursive case"
7	"propose for then recursive case"	local:for_Thenrecursivecase	"propose"
7	"propose for then recursive case"	local:propose_for	"then recursive case"
7	"small number of sparql queries"	local:of_sparqlqueries	"small number"
7	"small number of sparql queries"	local:smallnumber_of	"sparql queries"
7	"small number of sparql queries over endpoint"	local:over_endpoint	"small number of sparql queries"
7	"small number of sparql queries over endpoint"	local:smallnumberofsparqlqueries_over	"endpoint"
7	"set of propositional formulas"	local:of_propositionalformulas	"set"
7	"set of propositional formulas"	local:set_of	"propositional formulas"
7	"passed to sat solver"	local:to_satsolver	"passed"
7	"passed to sat solver"	local:passed_to	"sat solver"
8	"recursive"	local:partOf	"recursive fragments"
8	"recursive fragments"	rdfs:subClassOf	"fragments"
8	"external solver"	rdfs:subClassOf	"solver"
8	"external"	local:partOf	"external solver"
8	"when dealing"	rdfs:subClassOf	"dealing"
8	"can optimized"	rdfs:subClassOf	"optimized"
8	"finally show"	rdfs:subClassOf	"show"
8	"when dealing with recursive fragments"	local:with_recursivefragments	"when dealing"
8	"when dealing with recursive fragments"	local:whendealing_with	"recursive fragments"
8	"recursive fragments of shacl"	local:of_shacl	"recursive fragments"
8	"recursive fragments of shacl"	local:recursivefragments_of	"shacl"
8	"can optimized without need"	local:without_need	"can optimized"
8	"can optimized without need"	local:canoptimized_without	"need"
8	"need for external solver"	local:for_externalsolver	"need"
8	"need for external solver"	local:need_for	"external solver"
9	"tractable"	local:partOf	"tractable fragments"
9	"tractable fragments"	rdfs:subClassOf	"fragments"
9	"external solver"	rdfs:subClassOf	"solver"
9	"external"	local:partOf	"external solver"
9	"when dealing"	rdfs:subClassOf	"dealing"
9	"can optimized"	rdfs:subClassOf	"optimized"
9	"finally show"	rdfs:subClassOf	"show"
9	"when dealing with tractable fragments"	local:with_tractablefragments	"when dealing"
9	"when dealing with tractable fragments"	local:whendealing_with	"tractable fragments"
9	"tractable fragments of shacl"	local:of_shacl	"tractable fragments"
9	"tractable fragments of shacl"	local:tractablefragments_of	"shacl"
9	"can optimized without need"	local:without_need	"can optimized"
9	"can optimized without need"	local:canoptimized_without	"need"
9	"need for external solver"	local:for_externalsolver	"need"
9	"need for external solver"	local:need_for	"external solver"
10	"last"	local:partOf	"last approach"
10	"proof-of-concept"	local:partOf	"proof-of-concept evaluation"
10	"last approach"	rdfs:subClassOf	"approach"
10	"proof-of-concept evaluation"	rdfs:subClassOf	"evaluation"
10	"also present"	rdfs:subClassOf	"present"
10	"proof-of-concept evaluation of last approach"	local:of_lastapproach	"proof-of-concept evaluation"
10	"proof-of-concept evaluation of last approach"	local:proof-of-conceptevaluation_of	"last approach"
