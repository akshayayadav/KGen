0	"distributed"	vn.role:Theme	"ontology alignment construction"
0	"problem,"	local:AM-LOC	"the distributed ontology alignment construction"
0	"agree"	local:AM-LOC	"the distributed ontology alignment construction"
0	"agree"	local:AM-TMP	"upon a meaningful subset of correspondences that map between two agents respective ontologies."
0	"agree"	vn.role:Actor	"two agents"
1	"may tempted"	local:AM-PNC	"manipulate the negotiation in favour of a preferred alignment by misrepresenting the weight or confidence of the exchanged correspondences."
1	"may tempted"	vn.role:Cause	"however, an agent"
1	"manipulate"	vn.role:Agent	"however, an agent"
1	"manipulate"	vn.role:Patient	"the negotiation"
1	"misrepresenting"	vn.role:Agent	"however, an agent"
1	"misrepresenting"	vn.role:Theme	"the weight or confidence of the exchanged correspondences."
2	"revealing"	vn.role:Agent	"the agents"
2	"revealing"	vn.role:Theme	"information."
3	"examine"	vn.role:Agent	"we"
3	"examine"	vn.role:Location	"model as a novel mechanism design problem on an edge-weighted bipartite graph, where each side of the graph represents each agent's private entities, and where each agent maintains a private set of associated with model candidate correspondences."
3	"represents"	local:AM-LOC	"edge-weighted bipartite graph,"
3	"represents"	vn.role:Agent	"each side of the graph"
3	"represents"	vn.role:Theme	"each agent's private entities, and where each agent maintains a private set of associated with model candidate correspondences."
3	"maintains"	vn.role:Agent	"each agent"
3	"maintains"	vn.role:Theme	"private set of associated with model candidate correspondences."
3	"associated"	vn.role:Agent	"with model candidate correspondences."
4	"examine"	vn.role:Agent	"we"
4	"examine"	vn.role:Location	"model as a novel mechanism design problem on an edge-weighted bipartite graph, where each side of the graph represents each agent's private entities, and where each agent maintains a private set of associated with this problem."
4	"represents"	local:AM-LOC	"edge-weighted bipartite graph,"
4	"represents"	vn.role:Agent	"each side of the graph"
4	"represents"	vn.role:Theme	"each agent's private entities, and where each agent maintains a private set of associated with this problem."
4	"maintains"	vn.role:Agent	"each agent"
4	"maintains"	vn.role:Theme	"private set of associated with this problem."
4	"associated"	vn.role:Patient2	"private set"
4	"associated"	vn.role:Agent	"with this problem."
5	"examine"	vn.role:Agent	"we"
5	"examine"	vn.role:Location	"this problem and model this problem on an edge-weighted bipartite graph, where each side of the graph represents each agent's private entities, and where each agent maintains a private set of associated with this problem."
5	"represents"	local:AM-LOC	"edge-weighted bipartite graph,"
5	"represents"	vn.role:Agent	"each side of the graph"
5	"represents"	vn.role:Theme	"each agent's private entities, and where each agent maintains a private set of associated with this problem."
5	"maintains"	vn.role:Agent	"each agent"
5	"maintains"	vn.role:Theme	"private set of associated with this problem."
5	"associated"	vn.role:Patient2	"private set"
5	"associated"	vn.role:Agent	"with this problem."
6	"examine"	vn.role:Agent	"we"
6	"examine"	vn.role:Location	"this problem and model this problem on an edge-weighted bipartite graph, where each side of the graph represents each agent's private entities, and where each agent maintains a private set of associated with model candidate correspondences."
6	"represents"	local:AM-LOC	"edge-weighted bipartite graph,"
6	"represents"	vn.role:Agent	"each side of the graph"
6	"represents"	vn.role:Theme	"each agent's private entities, and where each agent maintains a private set of associated with model candidate correspondences."
6	"maintains"	vn.role:Agent	"each agent"
6	"maintains"	vn.role:Theme	"private set of associated with model candidate correspondences."
6	"associated"	vn.role:Patient2	"private set"
6	"associated"	vn.role:Agent	"with model candidate correspondences."
7	"find"	vn.role:Agent	"the objective"
7	"find"	vn.role:Theme	"matching that maximises the agents' social welfare."
7	"maximises"	vn.role:Agent	"matching"
7	"maximises"	vn.role:Predicate	"the agents' social welfare."
8	"show"	vn.role:Agent	"we"
8	"show"	vn.role:Theme	"that implementations in dominant strategies should be solved optimally if truthful mechanisms are required."
8	"should solved"	local:AM-MNR	"optimally"
8	"should solved"	local:AM-ADV	"truthful mechanisms are required."
9	"study"	vn.role:Agent	"we"
9	"study"	vn.role:Theme	"implementations in dominant strategies."
10	"studied"	local:AM-TMP	"then"
10	"studied"	local:AM-MNR	"with a first-price payment rule, proving tight bounds on the price of stability."
10	"studied"	vn.role:Theme	"decentralised version of the greedy allocation algorithm"
10	"proving"	vn.role:Agent	"first-price payment rule,"
10	"proving"	vn.role:Theme	"tight bounds on the price of stability."
11	"studied"	local:AM-TMP	"then"
11	"studied"	local:AM-MNR	"with a first-price payment rule, proving tight bounds on the price of anarchy."
11	"studied"	vn.role:Theme	"decentralised version of the greedy allocation algorithm"
11	"proving"	vn.role:Agent	"first-price payment rule,"
11	"proving"	vn.role:Theme	"tight bounds on the price of anarchy."
0	"construction"	local:partOf	"construction problem"
0	"distributed"	local:partOf	"distributed ontology"
0	"meaningful subset"	rdfs:subClassOf	"subset"
0	"respective ontologies"	rdfs:subClassOf	"ontologies"
0	"construction problem"	rdfs:subClassOf	"problem"
0	"alignment construction"	local:partOf	"alignment construction problem"
0	"meaningful"	local:partOf	"meaningful subset"
0	"alignment construction problem"	rdfs:subClassOf	"problem"
0	"distributed ontology"	rdfs:subClassOf	"ontology"
0	"alignment"	local:partOf	"alignment construction"
0	"respective"	local:partOf	"respective ontologies"
0	"alignment construction"	rdfs:subClassOf	"construction"
0	"two agents"	rdfs:subClassOf	"agents"
0	"two agents"	rdfs:subClassOf	"agents"
0	"alignment construction problem"	rdfs:subClassOf	"construction problem"
0	"ontology alignment construction problem"	rdfs:subClassOf	"alignment construction problem"
0	"distributed ontology alignment construction problem"	rdfs:subClassOf	"ontology alignment construction problem"
0	"agree in distributed ontology alignment construction problem"	local:in_distributedontologyalignmentconstructionproblem	"agree"
0	"agree in distributed ontology alignment construction problem"	local:agree_in	"distributed ontology alignment construction problem"
0	"agree in distributed ontology alignment construction problem upon meaningful subset"	local:upon_meaningfulsubset	"agree in distributed ontology alignment construction problem"
0	"agree in distributed ontology alignment construction problem upon meaningful subset"	local:agreeindistributedontologyalignmentconstructionproblem_upon	"meaningful subset"
0	"meaningful subset of correspondences"	local:of_correspondences	"meaningful subset"
0	"meaningful subset of correspondences"	local:meaningfulsubset_of	"correspondences"
0	"map between two agents"	local:between_twoagents	"map"
0	"map between two agents"	local:map_between	"two agents"
1	"exchanged"	local:partOf	"exchanged correspondences"
1	"preferred alignment"	rdfs:subClassOf	"alignment"
1	"preferred"	local:partOf	"preferred alignment"
1	"exchanged correspondences"	rdfs:subClassOf	"correspondences"
1	"may tempted"	rdfs:subClassOf	"tempted"
1	"however may tempted"	rdfs:subClassOf	"may tempted"
1	"manipulate in favour"	local:in_favour	"manipulate"
1	"manipulate in favour"	local:manipulate_in	"favour"
1	"favour of preferred alignment"	local:of_preferredalignment	"favour"
1	"favour of preferred alignment"	local:favour_of	"preferred alignment"
1	"weight of exchanged correspondences"	local:of_exchangedcorrespondences	"weight"
1	"weight of exchanged correspondences"	local:weight_of	"exchanged correspondences"
2	"when revealing"	rdfs:subClassOf	"revealing"
2	"can incentivised"	rdfs:subClassOf	"incentivised"
2	"only meaningful"	rdfs:subClassOf	"meaningful"
2	"can only meaningful"	rdfs:subClassOf	"only meaningful"
2	"therefore can only meaningful"	rdfs:subClassOf	"can only meaningful"
3	"model candidate correspondences"	rdfs:subClassOf	"correspondences"
3	"edge-weighted bipartite graph"	rdfs:subClassOf	"graph"
3	"bipartite graph"	rdfs:subClassOf	"graph"
3	"private entities"	rdfs:subClassOf	"entities"
3	"design"	local:partOf	"design problem"
3	"mechanism design"	rdfs:subClassOf	"design"
3	"novel mechanism design"	rdfs:subClassOf	"design"
3	"model"	local:partOf	"model candidate"
3	"novel mechanism design"	local:partOf	"novel mechanism design problem"
3	"candidate correspondences"	rdfs:subClassOf	"correspondences"
3	"edge-weighted bipartite"	local:partOf	"edge-weighted bipartite graph"
3	"mechanism design"	local:partOf	"mechanism design problem"
3	"candidate"	local:partOf	"candidate correspondences"
3	"model candidate"	local:partOf	"model candidate correspondences"
3	"edge-weighted"	local:partOf	"edge-weighted bipartite"
3	"edge-weighted bipartite"	rdfs:subClassOf	"bipartite"
3	"bipartite"	local:partOf	"bipartite graph"
3	"private"	local:partOf	"private entities"
3	"mechanism design problem"	rdfs:subClassOf	"problem"
3	"novel mechanism design problem"	rdfs:subClassOf	"problem"
3	"novel mechanism"	local:partOf	"novel mechanism design"
3	"design problem"	rdfs:subClassOf	"problem"
3	"novel"	local:partOf	"novel mechanism"
3	"mechanism"	local:partOf	"mechanism design"
3	"private"	local:partOf	"private set"
3	"novel mechanism"	rdfs:subClassOf	"mechanism"
3	"model candidate"	rdfs:subClassOf	"candidate"
3	"private set"	rdfs:subClassOf	"set"
3	"model candidate correspondences"	rdfs:subClassOf	"candidate correspondences"
3	"of set"	rdfs:subClassOf	"set"
3	"private of set"	rdfs:subClassOf	"of set"
3	"where maintains"	rdfs:subClassOf	"maintains"
3	"agent private entities"	rdfs:subClassOf	"private entities"
3	"where represents"	rdfs:subClassOf	"represents"
3	"edge-weighted bipartite graph"	rdfs:subClassOf	"bipartite graph"
3	"mechanism design problem"	rdfs:subClassOf	"design problem"
3	"novel mechanism design problem"	rdfs:subClassOf	"mechanism design problem"
3	"examine as novel mechanism design problem"	local:as_novelmechanismdesignproblem	"examine"
3	"examine as novel mechanism design problem"	local:examine_as	"novel mechanism design problem"
3	"novel mechanism design problem on edge-weighted bipartite graph"	local:on_edge-weightedbipartitegraph	"novel mechanism design problem"
3	"novel mechanism design problem on edge-weighted bipartite graph"	local:novelmechanismdesignproblem_on	"edge-weighted bipartite graph"
3	"side of edge-weighted bipartite graph"	local:of_edge-weightedbipartitegraph	"side"
3	"side of edge-weighted bipartite graph"	local:side_of	"edge-weighted bipartite graph"
3	"associated with model candidate correspondences"	local:with_modelcandidatecorrespondences	"associated"
3	"associated with model candidate correspondences"	local:associated_with	"model candidate correspondences"
4	"edge-weighted bipartite graph"	rdfs:subClassOf	"graph"
4	"bipartite graph"	rdfs:subClassOf	"graph"
4	"private entities"	rdfs:subClassOf	"entities"
4	"design"	local:partOf	"design problem"
4	"mechanism design"	rdfs:subClassOf	"design"
4	"novel mechanism design"	rdfs:subClassOf	"design"
4	"novel mechanism design"	local:partOf	"novel mechanism design problem"
4	"mechanism design"	local:partOf	"mechanism design problem"
4	"edge-weighted bipartite"	local:partOf	"edge-weighted bipartite graph"
4	"edge-weighted"	local:partOf	"edge-weighted bipartite"
4	"edge-weighted bipartite"	rdfs:subClassOf	"bipartite"
4	"bipartite"	local:partOf	"bipartite graph"
4	"private"	local:partOf	"private entities"
4	"mechanism design problem"	rdfs:subClassOf	"problem"
4	"novel mechanism design problem"	rdfs:subClassOf	"problem"
4	"novel mechanism"	local:partOf	"novel mechanism design"
4	"design problem"	rdfs:subClassOf	"problem"
4	"novel"	local:partOf	"novel mechanism"
4	"mechanism"	local:partOf	"mechanism design"
4	"private"	local:partOf	"private set"
4	"novel mechanism"	rdfs:subClassOf	"mechanism"
4	"private set"	rdfs:subClassOf	"set"
4	"where maintains"	rdfs:subClassOf	"maintains"
4	"agent private entities"	rdfs:subClassOf	"private entities"
4	"where represents"	rdfs:subClassOf	"represents"
4	"edge-weighted bipartite graph"	rdfs:subClassOf	"bipartite graph"
4	"mechanism design problem"	rdfs:subClassOf	"design problem"
4	"novel mechanism design problem"	rdfs:subClassOf	"mechanism design problem"
4	"examine as novel mechanism design problem"	local:as_novelmechanismdesignproblem	"examine"
4	"examine as novel mechanism design problem"	local:examine_as	"novel mechanism design problem"
4	"novel mechanism design problem on edge-weighted bipartite graph"	local:on_edge-weightedbipartitegraph	"novel mechanism design problem"
4	"novel mechanism design problem on edge-weighted bipartite graph"	local:novelmechanismdesignproblem_on	"edge-weighted bipartite graph"
4	"side of edge-weighted bipartite graph"	local:of_edge-weightedbipartitegraph	"side"
4	"side of edge-weighted bipartite graph"	local:side_of	"edge-weighted bipartite graph"
4	"private set of associated"	local:of_associated	"private set"
4	"private set of associated"	local:privateset_of	"associated"
4	"associated with novel mechanism design problem on edge-weighted bipartite graph"	local:with_novelmechanismdesignproblemonedge-weightedbipartitegraph	"associated"
4	"associated with novel mechanism design problem on edge-weighted bipartite graph"	local:associated_with	"novel mechanism design problem on edge-weighted bipartite graph"
5	"edge-weighted"	local:partOf	"edge-weighted bipartite"
5	"edge-weighted bipartite"	rdfs:subClassOf	"bipartite"
5	"bipartite"	local:partOf	"bipartite graph"
5	"edge-weighted bipartite"	local:partOf	"edge-weighted bipartite graph"
5	"edge-weighted bipartite graph"	rdfs:subClassOf	"graph"
5	"private"	local:partOf	"private entities"
5	"private"	local:partOf	"private set"
5	"bipartite graph"	rdfs:subClassOf	"graph"
5	"private entities"	rdfs:subClassOf	"entities"
5	"private set"	rdfs:subClassOf	"set"
5	"where maintains"	rdfs:subClassOf	"maintains"
5	"agent private entities"	rdfs:subClassOf	"private entities"
5	"where represents"	rdfs:subClassOf	"represents"
5	"edge-weighted bipartite graph"	rdfs:subClassOf	"bipartite graph"
5	"problem on edge-weighted bipartite graph"	local:on_edge-weightedbipartitegraph	"problem"
5	"problem on edge-weighted bipartite graph"	local:problem_on	"edge-weighted bipartite graph"
5	"side of edge-weighted bipartite graph"	local:of_edge-weightedbipartitegraph	"side"
5	"side of edge-weighted bipartite graph"	local:side_of	"edge-weighted bipartite graph"
5	"private set of associated"	local:of_associated	"private set"
5	"private set of associated"	local:privateset_of	"associated"
5	"associated with problem on edge-weighted bipartite graph"	local:with_problemonedge-weightedbipartitegraph	"associated"
5	"associated with problem on edge-weighted bipartite graph"	local:associated_with	"problem on edge-weighted bipartite graph"
6	"model"	local:partOf	"model candidate"
6	"model candidate correspondences"	rdfs:subClassOf	"correspondences"
6	"edge-weighted"	local:partOf	"edge-weighted bipartite"
6	"edge-weighted bipartite"	rdfs:subClassOf	"bipartite"
6	"bipartite"	local:partOf	"bipartite graph"
6	"edge-weighted bipartite"	local:partOf	"edge-weighted bipartite graph"
6	"edge-weighted bipartite graph"	rdfs:subClassOf	"graph"
6	"candidate correspondences"	rdfs:subClassOf	"correspondences"
6	"private"	local:partOf	"private entities"
6	"private"	local:partOf	"private set"
6	"bipartite graph"	rdfs:subClassOf	"graph"
6	"model candidate"	rdfs:subClassOf	"candidate"
6	"candidate"	local:partOf	"candidate correspondences"
6	"private entities"	rdfs:subClassOf	"entities"
6	"private set"	rdfs:subClassOf	"set"
6	"model candidate"	local:partOf	"model candidate correspondences"
6	"model candidate correspondences"	rdfs:subClassOf	"candidate correspondences"
6	"of set"	rdfs:subClassOf	"set"
6	"private of set"	rdfs:subClassOf	"of set"
6	"where maintains"	rdfs:subClassOf	"maintains"
6	"agent private entities"	rdfs:subClassOf	"private entities"
6	"where represents"	rdfs:subClassOf	"represents"
6	"edge-weighted bipartite graph"	rdfs:subClassOf	"bipartite graph"
6	"problem on edge-weighted bipartite graph"	local:on_edge-weightedbipartitegraph	"problem"
6	"problem on edge-weighted bipartite graph"	local:problem_on	"edge-weighted bipartite graph"
6	"side of edge-weighted bipartite graph"	local:of_edge-weightedbipartitegraph	"side"
6	"side of edge-weighted bipartite graph"	local:side_of	"edge-weighted bipartite graph"
6	"associated with model candidate correspondences"	local:with_modelcandidatecorrespondences	"associated"
6	"associated with model candidate correspondences"	local:associated_with	"model candidate correspondences"
7	"social welfare"	rdfs:subClassOf	"welfare"
7	"social"	local:partOf	"social welfare"
7	"agents social welfare"	rdfs:subClassOf	"social welfare"
8	"dominant strategies"	rdfs:subClassOf	"strategies"
8	"truthful"	local:partOf	"truthful mechanisms"
8	"dominant"	local:partOf	"dominant strategies"
8	"truthful mechanisms"	rdfs:subClassOf	"mechanisms"
8	"optimally solved"	rdfs:subClassOf	"solved"
8	"should optimally solved"	rdfs:subClassOf	"optimally solved"
8	"implementations in dominant strategies"	local:in_dominantstrategies	"implementations"
8	"implementations in dominant strategies"	local:implementations_in	"dominant strategies"
9	"dominant"	local:partOf	"dominant strategies"
9	"dominant strategies"	rdfs:subClassOf	"strategies"
9	"implementations in dominant strategies"	local:in_dominantstrategies	"implementations"
9	"implementations in dominant strategies"	local:implementations_in	"dominant strategies"
10	"decentralised"	local:partOf	"decentralised version"
10	"greedy allocation"	local:partOf	"greedy allocation algorithm"
10	"greedy"	local:partOf	"greedy allocation"
10	"tight bounds"	rdfs:subClassOf	"bounds"
10	"first-price payment"	local:partOf	"first-price payment rule"
10	"allocation"	local:partOf	"allocation algorithm"
10	"allocation algorithm"	rdfs:subClassOf	"algorithm"
10	"first-price payment"	rdfs:subClassOf	"payment"
10	"first-price payment rule"	rdfs:subClassOf	"rule"
10	"greedy allocation algorithm"	rdfs:subClassOf	"algorithm"
10	"payment rule"	rdfs:subClassOf	"rule"
10	"payment"	local:partOf	"payment rule"
10	"greedy allocation"	rdfs:subClassOf	"allocation"
10	"tight"	local:partOf	"tight bounds"
10	"decentralised version"	rdfs:subClassOf	"version"
10	"first-price"	local:partOf	"first-price payment"
10	"first-price payment rule"	rdfs:subClassOf	"payment rule"
10	"then studied"	rdfs:subClassOf	"studied"
10	"greedy allocation algorithm"	rdfs:subClassOf	"allocation algorithm"
10	"decentralised version of greedy allocation algorithm"	local:of_greedyallocationalgorithm	"decentralised version"
10	"decentralised version of greedy allocation algorithm"	local:decentralisedversion_of	"greedy allocation algorithm"
10	"then studied with first-price payment rule"	local:with_first-pricepaymentrule	"then studied"
10	"then studied with first-price payment rule"	local:thenstudied_with	"first-price payment rule"
10	"tight bounds on price"	local:on_Price	"tight bounds"
10	"tight bounds on price"	local:tightbounds_on	"price"
10	"price of stability"	local:of_Stability	"price"
10	"price of stability"	local:Price_of	"stability"
11	"decentralised"	local:partOf	"decentralised version"
11	"greedy allocation"	local:partOf	"greedy allocation algorithm"
11	"greedy"	local:partOf	"greedy allocation"
11	"tight bounds"	rdfs:subClassOf	"bounds"
11	"first-price payment"	local:partOf	"first-price payment rule"
11	"allocation"	local:partOf	"allocation algorithm"
11	"allocation algorithm"	rdfs:subClassOf	"algorithm"
11	"first-price payment"	rdfs:subClassOf	"payment"
11	"first-price payment rule"	rdfs:subClassOf	"rule"
11	"greedy allocation algorithm"	rdfs:subClassOf	"algorithm"
11	"payment rule"	rdfs:subClassOf	"rule"
11	"payment"	local:partOf	"payment rule"
11	"greedy allocation"	rdfs:subClassOf	"allocation"
11	"tight"	local:partOf	"tight bounds"
11	"decentralised version"	rdfs:subClassOf	"version"
11	"first-price"	local:partOf	"first-price payment"
11	"first-price payment rule"	rdfs:subClassOf	"payment rule"
11	"then studied"	rdfs:subClassOf	"studied"
11	"greedy allocation algorithm"	rdfs:subClassOf	"allocation algorithm"
11	"decentralised version of greedy allocation algorithm"	local:of_greedyallocationalgorithm	"decentralised version"
11	"decentralised version of greedy allocation algorithm"	local:decentralisedversion_of	"greedy allocation algorithm"
11	"then studied with first-price payment rule"	local:with_first-pricepaymentrule	"then studied"
11	"then studied with first-price payment rule"	local:thenstudied_with	"first-price payment rule"
11	"tight bounds on price"	local:on_Price	"tight bounds"
11	"tight bounds on price"	local:tightbounds_on	"price"
11	"price of anarchy"	local:of_Anarchy	"price"
11	"price of anarchy"	local:Price_of	"anarchy"
