0	"join"	vn.role:Actor1	"worst-case optimal multiway"
0	"join"	vn.role:Actor2	"these algorithms"
0	"gained"	local:AM-TMP	"recently"
0	"gained"	local:AM-LOC	"the database literature."
0	"gained"	vn.role:Patient	"worst-case optimal multiway join these algorithms"
0	"gained"	vn.role:Attribute	"lot of attention"
1	"not offer"	local:AM-ADV	"only"
1	"not offer"	vn.role:Agent	"these algorithms"
1	"not offer"	vn.role:Theme	"strong theoretical guarantees of efficiency,"
1	"demonstrated"	local:AM-DIS	"also"
1	"demonstrated"	local:AM-MNR	"empirically"
1	"demonstrated"	vn.role:Cause	"these algorithms not only offer strong theoretical guarantees to significantly improve query runtimes for graph databases."
1	"improve"	local:AM-MNR	"significantly"
1	"improve"	vn.role:Agent	"these algorithms not only offer strong theoretical guarantees"
1	"improve"	vn.role:Patient	"query runtimes for graph databases."
2	"not offer"	local:AM-ADV	"only"
2	"not offer"	vn.role:Agent	"these algorithms"
2	"not offer"	vn.role:Theme	"strong theoretical guarantees of efficiency,"
2	"demonstrated"	local:AM-DIS	"also"
2	"demonstrated"	local:AM-MNR	"empirically"
2	"demonstrated"	vn.role:Cause	"these algorithms not only offer strong theoretical guarantees to significantly improve query runtimes for relational databases."
2	"improve"	local:AM-MNR	"significantly"
2	"improve"	vn.role:Agent	"these algorithms not only offer strong theoretical guarantees"
2	"improve"	vn.role:Patient	"query runtimes for relational databases."
3	"adopt"	vn.role:Agent	"the semantic web community"
3	"adopt"	vn.role:Theme	"such techniques;"
3	"supports"	local:AM-ADV	"despite these promising theoretical and practical results, however, the semantic web community has yet to adopt such techniques; to the best of our knowledge,"
3	"supports"	local:AM-TMP	"currently"
3	"supports"	vn.role:Theme	"native rdf database"
3	"supports"	vn.role:Experiencer	"such join algorithms, where in this paper our demonstrate that this should change."
3	"join"	vn.role:Actor1	"such algorithms,"
3	"demonstrate"	local:AM-ADV	"despite these promising theoretical and practical results, however, the semantic web community has yet to adopt such techniques; to the best of our knowledge, no native rdf database currently supports such join algorithms, where"
3	"demonstrate"	local:AM-LOC	"this paper"
3	"demonstrate"	vn.role:Recipient	"our"
3	"demonstrate"	vn.role:Cause	"that this should change."
4	"propose"	vn.role:Agent	"we"
4	"propose"	vn.role:Topic	"novel procedure for evaluating based on an existing worst-case join this algorithm."
4	"join"	vn.role:Actor1	"novel procedure for evaluating based on an existing worst-case"
4	"join"	vn.role:Actor2	"this algorithm."
5	"implement"	vn.role:Agent	"we"
5	"implement"	vn.role:Theme	"this algorithm in apache jena."
6	"propose"	local:AM-PNC	"for evaluating sparql queries."
6	"propose"	vn.role:Agent	"we"
6	"propose"	vn.role:Topic	"adaptation of this algorithm"
6	"evaluating"	vn.role:Agent	"adaptation"
6	"evaluating"	vn.role:Theme	"sparql queries."
7	"present"	local:AM-TMP	"then"
7	"present"	vn.role:Agent	"we"
7	"present"	vn.role:Theme	"experiments over the berlin and watdiv sparql benchmarks, and a novel benchmark"
7	"propose"	vn.role:Agent	"we"
7	"propose"	vn.role:Topic	"based on wikidata that is designed to provide insights into join performance for a more diverse set of basic graph patterns."
7	"designed"	vn.role:Beneficiary	"provide insights into join performance for a more diverse set of basic graph patterns."
7	"provide"	vn.role:Recipient	"wikidata"
7	"provide"	vn.role:Agent	"insights into join performance for a more diverse set of basic graph patterns."
7	"join"	vn.role:Actor2	"performance for a more diverse set of basic graph patterns."
8	"results"	vn.role:Theme	"we"
8	"results"	vn.role:Location	"show that with this new join algorithm, apache jena often runs orders of magnitude faster than the base version: blazegraph."
8	"show"	vn.role:Agent	"results"
8	"show"	vn.role:Theme	"that with this new join algorithm, apache jena often runs orders of magnitude faster than the base version: blazegraph."
8	"join"	vn.role:Actor2	"algorithm, apache jena"
8	"runs"	local:AM-MNR	"with this new join algorithm, apache jena faster than the base version: blazegraph."
8	"runs"	local:AM-TMP	"often"
8	"runs"	vn.role:Theme	"orders of magnitude"
9	"results"	vn.role:Theme	"we"
9	"results"	vn.role:Location	"show that with this new join algorithm, apache jena often runs orders of magnitude faster than the base version: virtuoso."
9	"show"	vn.role:Agent	"results"
9	"show"	vn.role:Theme	"that with this new join algorithm, apache jena often runs orders of magnitude faster than the base version: virtuoso."
9	"join"	vn.role:Actor2	"algorithm, apache jena"
9	"runs"	local:AM-MNR	"with this new join algorithm, apache jena faster than the base version: virtuoso."
9	"runs"	local:AM-TMP	"often"
9	"runs"	vn.role:Theme	"orders of magnitude"
10	"results"	vn.role:Theme	"we"
10	"results"	vn.role:Location	"show that with this new join algorithm, apache jena often runs orders of magnitude faster than two other sparql engines: virtuoso."
10	"show"	vn.role:Agent	"results"
10	"show"	vn.role:Theme	"that with this new join algorithm, apache jena often runs orders of magnitude faster than two other sparql engines: virtuoso."
10	"join"	vn.role:Actor2	"algorithm, apache jena"
10	"runs"	local:AM-MNR	"with this new join algorithm, apache jena faster than two other sparql engines: virtuoso."
10	"runs"	local:AM-TMP	"often"
10	"runs"	vn.role:Theme	"orders of magnitude"
11	"results"	vn.role:Theme	"we"
11	"results"	vn.role:Location	"show that with this new join algorithm, apache jena often runs orders of magnitude faster than two other sparql engines: blazegraph."
11	"show"	vn.role:Agent	"results"
11	"show"	vn.role:Theme	"that with this new join algorithm, apache jena often runs orders of magnitude faster than two other sparql engines: blazegraph."
11	"join"	vn.role:Actor2	"algorithm, apache jena"
11	"runs"	local:AM-MNR	"with this new join algorithm, apache jena faster than two other sparql engines: blazegraph."
11	"runs"	local:AM-TMP	"often"
11	"runs"	vn.role:Theme	"orders of magnitude"
0	"database"	local:partOf	"database literature"
0	"optimal multiway"	local:partOf	"optimal multiway join"
0	"database literature"	rdfs:subClassOf	"literature"
0	"optimal"	local:partOf	"optimal multiway"
0	"optimal multiway join"	rdfs:subClassOf	"join"
0	"multiway join"	rdfs:subClassOf	"join"
0	"optimal multiway"	rdfs:subClassOf	"multiway"
0	"multiway"	local:partOf	"multiway join"
0	"a attention"	rdfs:subClassOf	"attention"
0	"recently gained"	rdfs:subClassOf	"gained"
0	"have recently gained"	rdfs:subClassOf	"recently gained"
0	"worst-case optimal multiway"	rdfs:subClassOf	"optimal multiway"
0	"have recently gained in database literature"	local:in_databaseliterature	"have recently gained"
0	"have recently gained in database literature"	local:haverecentlygained_in	"database literature"
1	"theoretical guarantees"	rdfs:subClassOf	"guarantees"
1	"query"	local:partOf	"query runtimes"
1	"strong theoretical"	local:partOf	"strong theoretical guarantees"
1	"graph databases"	rdfs:subClassOf	"databases"
1	"strong theoretical"	rdfs:subClassOf	"theoretical"
1	"strong"	local:partOf	"strong theoretical"
1	"theoretical"	local:partOf	"theoretical guarantees"
1	"query runtimes"	rdfs:subClassOf	"runtimes"
1	"strong theoretical guarantees"	rdfs:subClassOf	"guarantees"
1	"graph"	local:partOf	"graph databases"
1	"significantly improve"	rdfs:subClassOf	"improve"
1	"empirically demonstrated"	rdfs:subClassOf	"demonstrated"
1	"also empirically demonstrated"	rdfs:subClassOf	"empirically demonstrated"
1	"have also empirically demonstrated"	rdfs:subClassOf	"also empirically demonstrated"
1	"strong theoretical guarantees"	rdfs:subClassOf	"theoretical guarantees"
1	"not only"	rdfs:subClassOf	"only"
1	"strong theoretical guarantees of efficiency"	local:of_efficiency	"strong theoretical guarantees"
1	"strong theoretical guarantees of efficiency"	local:strongtheoreticalguarantees_of	"efficiency"
1	"query runtimes for graph databases"	local:for_graphdatabases	"query runtimes"
1	"query runtimes for graph databases"	local:queryruntimes_for	"graph databases"
2	"theoretical guarantees"	rdfs:subClassOf	"guarantees"
2	"query"	local:partOf	"query runtimes"
2	"strong theoretical"	local:partOf	"strong theoretical guarantees"
2	"strong theoretical"	rdfs:subClassOf	"theoretical"
2	"relational databases"	rdfs:subClassOf	"databases"
2	"strong"	local:partOf	"strong theoretical"
2	"theoretical"	local:partOf	"theoretical guarantees"
2	"query runtimes"	rdfs:subClassOf	"runtimes"
2	"strong theoretical guarantees"	rdfs:subClassOf	"guarantees"
2	"relational"	local:partOf	"relational databases"
2	"significantly improve"	rdfs:subClassOf	"improve"
2	"empirically demonstrated"	rdfs:subClassOf	"demonstrated"
2	"also empirically demonstrated"	rdfs:subClassOf	"empirically demonstrated"
2	"have also empirically demonstrated"	rdfs:subClassOf	"also empirically demonstrated"
2	"strong theoretical guarantees"	rdfs:subClassOf	"theoretical guarantees"
2	"not only"	rdfs:subClassOf	"only"
2	"strong theoretical guarantees of efficiency"	local:of_efficiency	"strong theoretical guarantees"
2	"strong theoretical guarantees of efficiency"	local:strongtheoreticalguarantees_of	"efficiency"
2	"query runtimes for relational databases"	local:for_relationaldatabases	"query runtimes"
2	"query runtimes for relational databases"	local:queryruntimes_for	"relational databases"
3	"practical"	local:partOf	"practical results"
3	"such join"	rdfs:subClassOf	"join"
3	"such join algorithms"	rdfs:subClassOf	"algorithms"
3	"semantic web community"	rdfs:subClassOf	"community"
3	"rdf"	local:partOf	"rdf database"
3	"promising"	local:partOf	"promising theoretical"
3	"practical results"	rdfs:subClassOf	"results"
3	"semantic web"	rdfs:subClassOf	"web"
3	"native rdf"	rdfs:subClassOf	"rdf"
3	"such"	local:partOf	"such join"
3	"native rdf"	local:partOf	"native rdf database"
3	"web"	local:partOf	"web community"
3	"native rdf database"	rdfs:subClassOf	"database"
3	"rdf database"	rdfs:subClassOf	"database"
3	"web community"	rdfs:subClassOf	"community"
3	"semantic web"	local:partOf	"semantic web community"
3	"semantic"	local:partOf	"semantic web"
3	"such"	local:partOf	"such techniques"
3	"promising theoretical"	rdfs:subClassOf	"theoretical"
3	"such join"	local:partOf	"such join algorithms"
3	"such techniques"	rdfs:subClassOf	"techniques"
3	"native"	local:partOf	"native rdf"
3	"join"	local:partOf	"join algorithms"
3	"join algorithms"	rdfs:subClassOf	"algorithms"
3	"should change"	rdfs:subClassOf	"change"
3	"where demonstrate"	rdfs:subClassOf	"demonstrate"
3	"such join algorithms"	rdfs:subClassOf	"join algorithms"
3	"currently supports"	rdfs:subClassOf	"supports"
3	"native rdf database"	rdfs:subClassOf	"rdf database"
3	"no native rdf database"	rdfs:subClassOf	"native rdf database"
3	"our knowledge"	rdfs:subClassOf	"knowledge"
3	"yet has"	rdfs:subClassOf	"has"
3	"semantic web community"	rdfs:subClassOf	"web community"
3	"however has"	rdfs:subClassOf	"has"
3	"theoretical practical results"	rdfs:subClassOf	"practical results"
3	"promising theoretical practical results"	rdfs:subClassOf	"theoretical practical results"
3	"however has despite promising theoretical practical results"	local:despite_promisingtheoreticalpracticalresults	"however has"
3	"however has despite promising theoretical practical results"	local:howeverhas_despite	"promising theoretical practical results"
3	"however has despite promising theoretical practical results to best"	local:to_best	"however has despite promising theoretical practical results"
3	"however has despite promising theoretical practical results to best"	local:howeverhasdespitepromisingtheoreticalpracticalresults_to	"best"
3	"best of our knowledge"	local:of_ourknowledge	"best"
3	"best of our knowledge"	local:best_of	"our knowledge"
3	"where demonstrate in paper"	local:in_paper	"where demonstrate"
3	"where demonstrate in paper"	local:wheredemonstrate_in	"paper"
4	"novel procedure"	rdfs:subClassOf	"procedure"
4	"worst-case"	local:partOf	"worst-case join"
4	"worst-case join"	rdfs:subClassOf	"join"
4	"novel"	local:partOf	"novel procedure"
4	"existing worst-case"	rdfs:subClassOf	"worst-case"
4	"existing worst-case worst-case join"	local:_worst-casejoin	"existing worst-case"
4	"existing worst-case worst-case join"	local:existingworst-case_	"worst-case join"
5	"apache"	local:partOf	"apache jena"
5	"apache jena"	rdfs:subClassOf	"jena"
5	"algorithm in apache jena"	local:in_ApacheJena	"algorithm"
5	"algorithm in apache jena"	local:algorithm_in	"apache jena"
6	"sparql"	local:partOf	"sparql queries"
6	"sparql queries"	rdfs:subClassOf	"queries"
6	"adaptation of algorithm"	local:of_algorithm	"adaptation"
6	"adaptation of algorithm"	local:adaptation_of	"algorithm"
7	"basic"	local:partOf	"basic graph"
7	"basic graph"	rdfs:subClassOf	"graph"
7	"diverse set"	rdfs:subClassOf	"set"
7	"watdiv"	local:partOf	"watdiv sparql"
7	"diverse"	local:partOf	"diverse set"
7	"watdiv sparql"	rdfs:subClassOf	"sparql"
7	"watdiv sparql benchmarks"	rdfs:subClassOf	"benchmarks"
7	"more"	local:partOf	"more diverse"
7	"basic graph"	local:partOf	"basic graph patterns"
7	"join"	local:partOf	"join performance"
7	"join performance"	rdfs:subClassOf	"performance"
7	"watdiv sparql"	local:partOf	"watdiv sparql benchmarks"
7	"sparql benchmarks"	rdfs:subClassOf	"benchmarks"
7	"graph patterns"	rdfs:subClassOf	"patterns"
7	"novel"	local:partOf	"novel benchmark"
7	"graph"	local:partOf	"graph patterns"
7	"basic graph patterns"	rdfs:subClassOf	"patterns"
7	"more diverse set"	rdfs:subClassOf	"set"
7	"more diverse"	local:partOf	"more diverse set"
7	"sparql"	local:partOf	"sparql benchmarks"
7	"more diverse"	rdfs:subClassOf	"diverse"
7	"novel benchmark"	rdfs:subClassOf	"benchmark"
7	"basic graph patterns"	rdfs:subClassOf	"graph patterns"
7	"watdiv sparql benchmarks"	rdfs:subClassOf	"sparql benchmarks"
7	"then present"	rdfs:subClassOf	"present"
7	"experiments over berlin"	local:over_Berlin	"experiments"
7	"experiments over berlin"	local:experiments_over	"berlin"
7	"experiments over berlin over watdiv sparql benchmarks"	local:over_watdivsparqlbenchmarks	"experiments over berlin"
7	"experiments over berlin over watdiv sparql benchmarks"	local:experimentsoverBerlin_over	"watdiv sparql benchmarks"
7	"join for more diverse set"	local:for_morediverseset	"join"
7	"join for more diverse set"	local:join_for	"more diverse set"
7	"more diverse set of basic graph patterns"	local:of_basicgraphpatterns	"more diverse set"
7	"more diverse set of basic graph patterns"	local:morediverseset_of	"basic graph patterns"
8	"new join"	rdfs:subClassOf	"join"
8	"base"	local:partOf	"base version"
8	"base version"	rdfs:subClassOf	"version"
8	"join"	local:partOf	"join algorithm"
8	"join algorithm"	rdfs:subClassOf	"algorithm"
8	"new"	local:partOf	"new join"
8	"apache"	local:partOf	"apache jena"
8	"new join algorithm"	rdfs:subClassOf	"algorithm"
8	"apache jena"	rdfs:subClassOf	"jena"
8	"new join"	local:partOf	"new join algorithm"
8	"faster runs"	rdfs:subClassOf	"runs"
8	"often faster runs"	rdfs:subClassOf	"faster runs"
8	"new join algorithm"	rdfs:subClassOf	"join algorithm"
8	"often faster runs with new join algorithm"	local:with_newjoinalgorithm	"often faster runs"
8	"often faster runs with new join algorithm"	local:oftenfasterruns_with	"new join algorithm"
8	"orders of magnitude"	local:of_magnitude	"orders"
8	"orders of magnitude"	local:orders_of	"magnitude"
8	"faster than base version"	local:than_baseversion	"faster"
8	"faster than base version"	local:faster_than	"base version"
9	"new join"	rdfs:subClassOf	"join"
9	"base"	local:partOf	"base version"
9	"base version"	rdfs:subClassOf	"version"
9	"join"	local:partOf	"join algorithm"
9	"join algorithm"	rdfs:subClassOf	"algorithm"
9	"new"	local:partOf	"new join"
9	"apache"	local:partOf	"apache jena"
9	"new join algorithm"	rdfs:subClassOf	"algorithm"
9	"apache jena"	rdfs:subClassOf	"jena"
9	"new join"	local:partOf	"new join algorithm"
9	"faster runs"	rdfs:subClassOf	"runs"
9	"often faster runs"	rdfs:subClassOf	"faster runs"
9	"new join algorithm"	rdfs:subClassOf	"join algorithm"
9	"often faster runs with new join algorithm"	local:with_newjoinalgorithm	"often faster runs"
9	"often faster runs with new join algorithm"	local:oftenfasterruns_with	"new join algorithm"
9	"orders of magnitude"	local:of_magnitude	"orders"
9	"orders of magnitude"	local:orders_of	"magnitude"
9	"faster than base version"	local:than_baseversion	"faster"
9	"faster than base version"	local:faster_than	"base version"
10	"other sparql"	rdfs:subClassOf	"sparql"
10	"sparql"	local:partOf	"sparql engines"
10	"sparql engines"	rdfs:subClassOf	"engines"
10	"new join"	rdfs:subClassOf	"join"
10	"other sparql"	local:partOf	"other sparql engines"
10	"other sparql engines"	rdfs:subClassOf	"engines"
10	"join"	local:partOf	"join algorithm"
10	"other"	local:partOf	"other sparql"
10	"join algorithm"	rdfs:subClassOf	"algorithm"
10	"new"	local:partOf	"new join"
10	"apache"	local:partOf	"apache jena"
10	"new join algorithm"	rdfs:subClassOf	"algorithm"
10	"apache jena"	rdfs:subClassOf	"jena"
10	"new join"	local:partOf	"new join algorithm"
10	"other sparql engines"	rdfs:subClassOf	"sparql engines"
10	"two other sparql engines"	rdfs:subClassOf	"other sparql engines"
10	"faster runs"	rdfs:subClassOf	"runs"
10	"often faster runs"	rdfs:subClassOf	"faster runs"
10	"new join algorithm"	rdfs:subClassOf	"join algorithm"
10	"often faster runs with new join algorithm"	local:with_newjoinalgorithm	"often faster runs"
10	"often faster runs with new join algorithm"	local:oftenfasterruns_with	"new join algorithm"
10	"orders of magnitude"	local:of_magnitude	"orders"
10	"orders of magnitude"	local:orders_of	"magnitude"
10	"faster than two other sparql engines"	local:than_twootherSPARQLengines	"faster"
10	"faster than two other sparql engines"	local:faster_than	"two other sparql engines"
11	"other sparql"	rdfs:subClassOf	"sparql"
11	"sparql"	local:partOf	"sparql engines"
11	"sparql engines"	rdfs:subClassOf	"engines"
11	"new join"	rdfs:subClassOf	"join"
11	"other sparql"	local:partOf	"other sparql engines"
11	"other sparql engines"	rdfs:subClassOf	"engines"
11	"join"	local:partOf	"join algorithm"
11	"other"	local:partOf	"other sparql"
11	"join algorithm"	rdfs:subClassOf	"algorithm"
11	"new"	local:partOf	"new join"
11	"apache"	local:partOf	"apache jena"
11	"new join algorithm"	rdfs:subClassOf	"algorithm"
11	"apache jena"	rdfs:subClassOf	"jena"
11	"new join"	local:partOf	"new join algorithm"
11	"other sparql engines"	rdfs:subClassOf	"sparql engines"
11	"two other sparql engines"	rdfs:subClassOf	"other sparql engines"
11	"faster runs"	rdfs:subClassOf	"runs"
11	"often faster runs"	rdfs:subClassOf	"faster runs"
11	"new join algorithm"	rdfs:subClassOf	"join algorithm"
11	"often faster runs with new join algorithm"	local:with_newjoinalgorithm	"often faster runs"
11	"often faster runs with new join algorithm"	local:oftenfasterruns_with	"new join algorithm"
11	"orders of magnitude"	local:of_magnitude	"orders"
11	"orders of magnitude"	local:orders_of	"magnitude"
11	"faster than two other sparql engines"	local:than_twootherSPARQLengines	"faster"
11	"faster than two other sparql engines"	local:faster_than	"two other sparql engines"
