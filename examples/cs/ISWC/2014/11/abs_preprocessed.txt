As the Web of Data is growing at an ever increasing speed, the lack of reliable query solutions for live public data becomes apparent.
sparql implementations have deliver impressive performance for public sparql endpoints yet poor availability— especially under high loads— prevents sparql implementations use in real-world applications.
sparql implementations have matured yet poor availability— especially under high loads— prevents sparql implementations use in real-world applications.
We propose to tackle this availability problem by defining a specific kind of Linked Data Fragments.
We propose to tackle this availability problem by defining triple pattern fragments.
Linked Data Fragments that enable low-cost publication of queryable data by moving intelligence from the server to the client.
a client-side sparql query processing algorithm that uses a dynamic iterator pipeline.
This paper introduces a client-side sparql query processing algorithm.
This paper formalizes the Linked Data Fragments concept.
This paper verifies servers’ availability under load.
The results indicate that, at the cost of lower performance, query techniques with triple pattern fragments lead to high availability, thereby allowing for reliable applications on top of public, queryable Linked Data.