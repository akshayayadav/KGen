Updates in RDF stores have recently been standardised in the SPARQL 1.1 Update specification.
computing entailed answers by ontologies.
However, computing is usually treated orthogonally to updates in triple stores.
Even the W3C SPARQL 1.1 Update explicitly exclude a standard behaviour for entailment regimes other than simple entailment in the context of updates.
SPARQL 1.1 Entailment Regimes specifications explicitly exclude a standard behaviour for entailment regimes other than simple entailment in the context of updates.
In this paper, we take a first step to close this gap.
language dealing with updates both of ABox and of TBox statements.
We define a fragment of SPARQL basic graph patterns corresponding to DL-Lite.
the corresponding SPARQL update language.
We discuss possible semantics along with potential strategies for implementing potential strategies.
redundancy-free RDF stores that do not store any RDF triples.
In particular, We materialised RDF stores redundancy-free RDF stores.
RDF stores which store all.
In particular, We treat both redundancy-free RDF stores.
any RDF triples entailed by others already.
all entailed triples explicitly.
In particular, We reduced RDF Stores, that is, redundancy-free RDF stores.
We have present some indications on practical feasibility.
We have implemented all semantics prototypically on top of an off-the-shelf triple store.