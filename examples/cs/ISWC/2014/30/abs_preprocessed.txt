the first semantic Table Interpretation method that adopts an incremental, mutually recursive.
This paper describes the first semantic Table Interpretation method.
bootstrapping learning approach seeded by automatically.
This paper describes TableMiner.
This paper describes bootstrapping learning approach selected ‘ partial ’ data from a table.
columns containing named entity.
TableMiner labels columns mentions with semantic concepts that best disambiguates entity content cells in these columns.
TableMiner labels columns mentions with semantic concepts that best describe data in these columns.
TableMiner is able to use various types of contextual information outside tables for Table Interpretation, including semantic markups ) that to the best of our knowledge, have never been used in Natural Language Processing tasks.
TableMiner is able to use various types of contextual information outside tables for Table Interpretation, including e.g., RDFamicrodata annotations ) that to the best of our knowledge, have never been used in Natural Language Processing tasks.
Evaluation on two datasets shows that compared to two baselines, TableMiner consistently obtains the best performance.
In the classification task, TableMiner achieves significant improvements of between 0.08 F1 depending on different baseline methods; in the classification task, TableMiner outperforms both baselines by between 0.37 in Precision on one dataset, and between 0.03 F1 on the other dataset.
In the classification task, TableMiner achieves significant improvements of between 0.08 F1 depending on different baseline methods; in the classification task, TableMiner outperforms both baselines by between 0.19 in Precision on one dataset, and between 0.02 F1 on the other dataset.
In the classification task, TableMiner achieves significant improvements of 0.38 F1 depending on different baseline methods; in the classification task, TableMiner outperforms both baselines by between 0.37 in Precision on one dataset, and between 0.03 F1 on the other dataset.
In the classification task, TableMiner achieves significant improvements of 0.38 F1 depending on different baseline methods; in the classification task, TableMiner outperforms both baselines by between 0.37 in Precision on one dataset, and between 0.02 F1 on the other dataset.
In the classification task, TableMiner achieves significant improvements of between 0.08 F1 depending on different baseline methods; in the classification task, TableMiner outperforms both baselines by between 0.19 in Precision on one dataset, and between 0.03 F1 on the other dataset.
In the classification task, TableMiner achieves significant improvements of 0.38 F1 depending on different baseline methods; in the classification task, TableMiner outperforms both baselines by between 0.19 in Precision on one dataset, and between 0.03 F1 on the other dataset.
In the classification task, TableMiner achieves significant improvements of between 0.08 F1 depending on different baseline methods; in the classification task, TableMiner outperforms both baselines by between 0.37 in Precision on one dataset, and between 0.02 F1 on the other dataset.
In the classification task, TableMiner achieves significant improvements of 0.38 F1 depending on different baseline methods; in the classification task, TableMiner outperforms both baselines by between 0.19 in Precision on one dataset, and between 0.02 F1 on the other dataset.
Observation also shows that the bootstrapping can potentially deliver computational savings of between 24.
the bootstrapping learning approach.
approach adopted by TableMiner.
Observation also shows that the bootstrapping can potentially deliver computational savings of 60.