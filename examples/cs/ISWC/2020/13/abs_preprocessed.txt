RDF datasets published on the Web without producing high loads on the data providersâ€™ servers.
Client-side SPARQL query processing enables evaluating queries over RDF datasets.
clients to evaluate SPARQL queries over SPARQL queries have been proposed.
Triple Pattern Fragment servers provide means to publish highly available RDF data on the Web.
requests submitted to the server.
efficient query plans that minimize both the number of requests.
requests submitted to the overall execution time.
For clients to devise efficient query plans it is key to accurately estimate join cardinalities to appropriately place physical join operators.
collecting fine-grained statistics from remote sources is a challenging task.
However.
the metadata provided by the Triple Pattern Fragment server.
collecting accurate statistics from remote sources is a challenging task.
clients typically rely on the metadata.
Addressing this shortcoming, we propose a robust-based query optimizer to devise efficient plans.
Addressing this shortcoming, we propose a cost query optimizer to devise efficient plans.
efficient plans combining both cost of query plans.
Addressing this shortcoming, we propose CROP to devise efficient plans.
efficient plans combining both robustness of query plans.
The idea of robustness is determining the impact of join cardinality estimation errors on the cost of a query plan.
The idea of robustness is determining the impact of to avoid plans where this impact is very high.
In our experimental study, our show that our concept of robustness complements the cost model.
In our experimental study, our show that our concept of robustness improves the efficiency of query plans.
Additionally, our show that our approach outperforms existing Triple Pattern Fragment clients in terms of overall runtime and number of requests.