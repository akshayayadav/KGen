knowledge graphs constitute powerful formalisms to integrate a myriad of existing data sources.
Data has exponentially grown in the last years.
Transformation functions– can be applied to overcome interoperability issues across heterogeneous data sources.
Transformation functions– specified with function-based mapping languages like FunUL.
Transformation functions– specified with function-based mapping languages like RMLFnO.
However, the absence of engines to efficiently execute these mapping languages hinders these.
these mapping languages global adoption.
We propose FunMap ; an interpreter of function-based mapping languages relies on a set of lossless rewriting rules to push down.
We propose an interpreter of function-based mapping languages; an interpreter of function-based mapping languages relies on a set of lossless rewriting rules to materialize the execution of functions in initial steps of knowledge graph creation.
We propose FunMap ; an interpreter of function-based mapping languages relies on a set of lossless rewriting rules to materialize the execution of functions in initial steps of knowledge graph creation.
We propose an interpreter of function-based mapping languages; an interpreter of function-based mapping languages relies on a set of lossless rewriting rules to push down.
any function-based mapping language that supports.
Although applicable to any function-based mapping language joins between mapping rules, FunMap feasibility is shown on RMLFnO.
FunMap reduces data redundancy, and duplicates and converts RMLFnO mappings into a set of equivalent rules executable on RML-compliant engines.
FunMap reduces data redundancy, and unused attributes and converts RMLFnO mappings into a set of equivalent rules executable on RML-compliant engines.
We evaluate FunMap performance over real-world testbeds from the biomedical domain.
The results indicate that FunMap reduces the execution time of RML-compliant engines by up to a factor of 18, furnishing, thus, a scalable solution for knowledge graph creation.