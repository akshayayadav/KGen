@PREFIX	cso:	<https://cso.kmi.open.ac.uk/topics/>	
@LINK	is	no_match	not_found	is	
@LINK	matching	no_match	not_found	matching	
@LINK	improve	no_match	not_found	improve	
@LINK	be sped	no_match	not_found	be sped	
@LINK	returning	no_match	not_found	returning	
@LINK	be adopted	no_match	not_found	be adopted	
@LINK	are requested	no_match	not_found	are requested	
@LINK	conducted	no_match	not_found	conducted	
@LINK	e.g	no_match	not_found	e.g	
@LINK	show	no_match	not_found	show	
@LINK	be exploited	no_match	not_found	be exploited	
@LINK	ordered	no_match	not_found	ordered	
@LINK	computes	no_match	not_found	computes	
@LINK	compare	no_match	not_found	compare	
@LINK	speed	no_match	not_found	speed	
@LINK	enabling	no_match	not_found	enabling	
@LINK	algorithm optimized	no_match	not_found	algorithm optimized	
@LINK	are	no_match	not_found	are	
@LINK	managed	no_match	not_found	managed	
@LINK	propose	no_match	not_found	propose	
@LINK	based	no_match	not_found	based	
@LINK	treats	no_match	not_found	treats	
@LINK	sparql-rank queries	no_match	not_found	sparql-rank queries	
@LINK	arq	no_match	not_found	arq	
@LINK	evaluation	no_match	not_found	evaluation	
@LINK	matching solutions	no_match	not_found	matching solutions	
@LINK	data	no_match	not_found	data	
@LINK	i.e	no_match	not_found	i.e	
@LINK	queries	no_match	not_found	queries	
@LINK	limited number k	no_match	not_found	limited number k	
@LINK	up query processing	no_match	not_found	up query processing	
@LINK	e.g	no_match	not_found	e.g	
@LINK	experiments	no_match	not_found	experiments	
@LINK	important property	no_match	not_found	important property	
@LINK	efficient split-and-interleave processing schemes	no_match	not_found	efficient split-and-interleave processing schemes	
@LINK	top-k queries	no_match	not_found	top-k queries	
@LINK	extended sparql algebra	no_match	not_found	extended sparql algebra	
@LINK	underuse order	no_match	not_found	underuse order	
@LINK	order	no_match	not_found	order	
@LINK	user-defined scoring function	no_match	not_found	user-defined scoring function	
@LINK	ten	no_match	not_found	ten	
@LINK	open source implementation	no_match	not_found	open source implementation	
@LINK	materialize-then-sort processing scheme	no_match	not_found	materialize-then-sort processing scheme	
@LINK	sparql-rank algebra	no_match	not_found	sparql-rank algebra	
@LINK	incremental execution model	no_match	not_found	incremental execution model	
@LINK	top k. data	no_match	not_found	top k. data	
@LINK	state-of-the-art sparql engines	no_match	not_found	state-of-the-art sparql engines	
@LINK	queries results	no_match	not_found	queries results	
@LINK	top-k sparql queries	no_match	not_found	top-k sparql queries	
@LINK	magnitude	no_match	not_found	magnitude	
@LINK	performance	no_match	not_found	performance	
@LINK	orders	no_match	not_found	orders	
@LINK	first class citizen	no_match	not_found	first class citizen	
@LINK	paper	no_match	not_found	paper	
@LINK	thousands	no_match	not_found	thousands	
@LINK	sparql-rank query engine	no_match	not_found	sparql-rank query engine	
@LINK	important category	no_match	not_found	important category	
@LINK	native rdf stores	no_match	not_found	native rdf stores	
@LINK	rank-aware join algorithm	no_match	not_found	rank-aware join algorithm	
@LINK	alternative physical operators	no_match	not_found	alternative physical operators	
@LINK	query processing	sameas	cso:query_processing	query processing	
@LINK	sparql	sameas	cso:sparql	sparql	
@LINK	engine	sameas	cso:engine	engine	
@LINK	rdf	sameas	cso:rdf	rdf	
@LINK	sparql queries	sameas	cso:sparql_queries	sparql queries	
