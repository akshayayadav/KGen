Top-k queries, i.e. queries results ordered by a user-defined scoring function, are an important category of queries.
queries returning the top k.
data that can be exploited to speed up query processing.
Order is an important property of data.
all the matching e.g. thousands ) even if e.g. ten ) are requested.
a materialize-then-sort processing scheme that computes all the.
State-of-the-art SPARQL engines underuse order.
all the matching solutions ) even if e.g. ten ) are requested.
all the matching e.g. thousands ) even if only a limited number k ) are requested.
all the matching solutions ) even if only a limited number k ) are requested.
top-k queries are mostly managed with a materialize-then-sort processing scheme.
an extended SPARQL algebra that treats order as a first class citizen, enabling efficient split-and-interleave processing schemes.
efficient split-and-interleave processing schemes that can be adopted to improve the performance of top-k SPARQL queries.
The SPARQL-RANK algebra is an extended SPARQL algebra.
algorithm optimized for native RDF stores.
In this paper we propose an incremental execution model for SPARQL-RANK queries, we compare the performance of alternative physical operators, and we propose a rank-aware join algorithm.
Experiments conducted with an open source implementation of a SPARQL-RANK query engine based on ARQ.
Experiments show that the evaluation of top-k queries can be sped up by orders of magnitude.