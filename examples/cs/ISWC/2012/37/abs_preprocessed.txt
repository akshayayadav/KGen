centralised approaches that can efficiently live decentralised approaches.
data cached from parts of the Web.
centralised approaches that can efficiently answer queries over data.
decentralised approaches that can provide fresher results over the entire Web at the cost of slower response times.
For Linked Data query engines, there are inherent trade-offs between centralised approaches.
Herein, we propose a hybrid query execution approach while speeding up results vs. the live scenario.
a hybrid query execution approach that returns fresher results from a broader range of sources vs. the centralised scenario.
We first compare results from two public SPARQL stores against current versions of the Linked Data sources two public SPARQL stores against current versions of the Linked Data sources they cache cache; results are often missing.
We first compare results from two public SPARQL stores against current versions of the Linked Data sources two public SPARQL stores against current versions of the Linked Data sources they cache cache; results are out-of-date.
We thus propose using coherence estimates to split a query into a sub-query.
the cached data.
a sub-query that should instead be run live.
a sub-query for which the have good fresh coverage.
We thus propose using coherence estimates to split a query into a sub-query.
Finally, We evaluate different hybrid query plans.
Finally, We evaluate split positions in a real-world setup.
the time taken vs. fully live execution.
We results show that hybrid query execution can improve freshness vs. fully cached results while reducing the time.