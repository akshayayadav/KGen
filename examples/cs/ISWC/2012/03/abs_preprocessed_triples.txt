0	"based"	vn.role:Cause	"instance"
0	"matching of types"	local:of_types	"matching"
0	"matching of types"	local:matching_of	"types"
0	"based"	vn.role:indirect_object	"matching of types"
1	"ontology"	rdfs:member	"ontology alignment"
1	"ontology alignment"	rdfs:subClassOf	"alignment"
1	"using"	vn.role:Agent	"ontology alignment"
1	"using"	vn.role:Theme	"instance"
2	"describe"	local:AM-LOC	"paper"
2	"describe"	vn.role:Agent	"we"
2	"describe"	vn.role:Theme	"mechanism"
2	"ontology"	rdfs:member	"ontology alignment"
2	"ontology alignment"	rdfs:subClassOf	"alignment"
2	"describe"	vn.role:Predicate	"ontology alignment"
3	"have"	vn.role:Experiencer	"ontologies"
3	"different"	rdfs:member	"different names"
3	"different names"	rdfs:subClassOf	"names"
3	"have"	vn.role:Stimulus	"different names"
4	"instance-based matching"	rdfs:subClassOf	"matching"
4	"instance-based"	rdfs:member	"instance-based matching"
4	"known"	vn.role:Theme	"instance-based matching"
4	"useful technique"	rdfs:subClassOf	"technique"
4	"useful"	rdfs:member	"useful technique"
4	"known"	vn.role:Theme	"useful technique"
4	"useful technique"	rdfs:subClassOf	"technique"
4	"useful"	rdfs:member	"useful technique"
4	"matching"	vn.role:indirect_object	"useful technique"
4	"matching"	vn.role:Patient2	"ontologies"
5	"have"	vn.role:Experiencer	"ontologies"
5	"different"	rdfs:member	"different structures"
5	"different structures"	rdfs:subClassOf	"structures"
5	"have"	vn.role:Stimulus	"different structures"
6	"key"	rdfs:member	"key problem"
6	"key problem"	rdfs:subClassOf	"problem"
6	"instance matching"	rdfs:subClassOf	"matching"
6	"instance"	rdfs:member	"instance matching"
6	"key problem in instance matching"	local:in_instancematching	"key problem"
6	"key problem in instance matching"	local:keyproblem_in	"instance matching"
6	"instance matching of types"	local:of_types	"instance matching"
6	"instance matching of types"	local:instancematching_of	"types"
6	"scaling"	vn.role:Agent	"key problem in instance matching"
6	"scaling"	vn.role:Theme	"matching"
6	"large"	rdfs:member	"large number"
6	"handle types"	rdfs:subClassOf	"types"
6	"handle"	rdfs:member	"handle types"
6	"large number"	rdfs:subClassOf	"number"
6	"handle with large number"	local:with_largenumber	"handle"
6	"handle with large number"	local:handle_with	"large number"
6	"large number of instances"	local:of_instances	"large number"
6	"large number of instances"	local:largenumber_of	"instances"
6	"scaling"	local:AM-PNC	"handle with large number"
6	"handle"	vn.role:Theme	"matching"
6	"handle"	vn.role:indirect_object	"types"
6	"large"	rdfs:member	"large number"
6	"large number"	rdfs:subClassOf	"number"
6	"large number of instances"	local:of_instances	"large number"
6	"large number of instances"	local:largenumber_of	"instances"
6	"handle"	vn.role:object	"large number of instances"
7	"key"	rdfs:member	"key problem"
7	"key problem"	rdfs:subClassOf	"problem"
7	"instance matching"	rdfs:subClassOf	"matching"
7	"instance"	rdfs:member	"instance matching"
7	"key problem in instance matching"	local:in_instancematching	"key problem"
7	"key problem in instance matching"	local:keyproblem_in	"instance matching"
7	"instance matching of types"	local:of_types	"instance matching"
7	"instance matching of types"	local:instancematching_of	"types"
7	"scaling"	vn.role:Agent	"key problem in instance matching"
7	"scaling"	vn.role:Theme	"matching"
7	"type pairs"	rdfs:subClassOf	"pairs"
7	"large"	rdfs:member	"large number"
7	"large number"	rdfs:subClassOf	"number"
7	"type"	rdfs:member	"type pairs"
7	"large number of type pairs"	local:of_typepairs	"large number"
7	"large number of type pairs"	local:largenumber_of	"type pairs"
7	"scaling"	local:AM-PNC	"match"
7	"match"	vn.role:Patient2	"matching"
7	"type pairs"	rdfs:subClassOf	"pairs"
7	"large"	rdfs:member	"large number"
7	"large number"	rdfs:subClassOf	"number"
7	"type"	rdfs:member	"type pairs"
7	"large number of type pairs"	local:of_typepairs	"large number"
7	"large number of type pairs"	local:largenumber_of	"type pairs"
7	"match"	vn.role:Patient2	"large number of type pairs"
8	"propose"	vn.role:Agent	"we"
8	"multiple"	rdfs:member	"multiple types"
8	"multiple types"	rdfs:subClassOf	"types"
8	"instance matching"	rdfs:subClassOf	"matching"
8	"vastly improve"	rdfs:subClassOf	"improve"
8	"hashing techniques"	rdfs:subClassOf	"techniques"
8	"sensitive hashing techniques"	rdfs:subClassOf	"hashing techniques"
8	"locality sensitive hashing techniques"	rdfs:subClassOf	"sensitive hashing techniques"
8	"use of locality sensitive hashing techniques"	local:of_localitysensitivehashingtechniques	"use"
8	"use of locality sensitive hashing techniques"	local:use_of	"locality sensitive hashing techniques"
8	"scalability of instance matching"	local:of_instancematching	"scalability"
8	"scalability of instance matching"	local:scalability_of	"instance matching"
8	"vastly improve across multiple types"	local:across_multipletypes	"vastly improve"
8	"vastly improve across multiple types"	local:vastlyimprove_across	"multiple types"
8	"propose"	vn.role:Topic	"use of locality sensitive hashing techniques"
8	"improve"	local:AM-MNR	"vastly"
8	"multiple"	rdfs:member	"multiple types"
8	"multiple types"	rdfs:subClassOf	"types"
8	"instance matching"	rdfs:subClassOf	"matching"
8	"scalability of instance matching"	local:of_instancematching	"scalability"
8	"scalability of instance matching"	local:scalability_of	"instance matching"
8	"scalability of instance matching across multiple types"	local:across_multipletypes	"scalability of instance matching"
8	"scalability of instance matching across multiple types"	local:scalabilityofinstancematching_across	"multiple types"
8	"improve"	vn.role:Patient	"scalability of instance matching across multiple types"
8	"scalability of instance"	local:of_instance	"scalability"
8	"scalability of instance"	local:scalability_of	"instance"
8	"matching"	vn.role:Patient2	"scalability of instance"
8	"multiple"	rdfs:member	"multiple types"
8	"multiple types"	rdfs:subClassOf	"types"
8	"matching"	local:AM-MNR	"multiple types"
9	"show"	vn.role:Agent	"we"
9	"different type"	rdfs:subClassOf	"type"
9	"type"	rdfs:member	"type systems"
9	"different type"	rdfs:member	"different type systems"
9	"type systems"	rdfs:subClassOf	"systems"
9	"different type systems"	rdfs:subClassOf	"systems"
9	"different"	rdfs:member	"different type"
9	"respectively systems"	rdfs:subClassOf	"systems"
9	"types respectively systems"	rdfs:subClassOf	"respectively systems"
9	"hundreds types"	rdfs:subClassOf	"types"
9	"type types respectively systems"	rdfs:subClassOf	"types respectively systems"
9	"different type types respectively systems"	rdfs:subClassOf	"type types respectively systems"
9	"two different type types respectively systems"	rdfs:subClassOf	"different type types respectively systems"
9	"approach with two different type types respectively systems"	local:with_twodifferenttypetypesrespectivelysystems	"approach"
9	"approach with two different type types respectively systems"	local:approach_with	"two different type types respectively systems"
9	"show"	vn.role:Theme	"feasibility"
9	"feasibility of we"	local:of_we	"feasibility"
9	"feasibility of we"	local:feasibility_of	"we"
9	"approach"	vn.role:object	"feasibility of we"
9	"different type"	rdfs:subClassOf	"type"
9	"type"	rdfs:member	"type systems"
9	"different type"	rdfs:member	"different type systems"
9	"type systems"	rdfs:subClassOf	"systems"
9	"different type systems"	rdfs:subClassOf	"systems"
9	"different"	rdfs:member	"different type"
9	"respectively systems"	rdfs:subClassOf	"systems"
9	"types respectively systems"	rdfs:subClassOf	"respectively systems"
9	"hundreds types"	rdfs:subClassOf	"types"
9	"type types respectively systems"	rdfs:subClassOf	"types respectively systems"
9	"different type types respectively systems"	rdfs:subClassOf	"type types respectively systems"
9	"two different type types respectively systems"	rdfs:subClassOf	"different type types respectively systems"
9	"approach"	vn.role:indirect_object	"two different type types respectively systems"
10	"show"	vn.role:Agent	"we"
10	"different type"	rdfs:subClassOf	"type"
10	"type"	rdfs:member	"type systems"
10	"different type"	rdfs:member	"different type systems"
10	"type systems"	rdfs:subClassOf	"systems"
10	"different type systems"	rdfs:subClassOf	"systems"
10	"different"	rdfs:member	"different type"
10	"respectively systems"	rdfs:subClassOf	"systems"
10	"types respectively systems"	rdfs:subClassOf	"respectively systems"
10	"thousands types"	rdfs:subClassOf	"types"
10	"type types respectively systems"	rdfs:subClassOf	"types respectively systems"
10	"different type types respectively systems"	rdfs:subClassOf	"type types respectively systems"
10	"two different type types respectively systems"	rdfs:subClassOf	"different type types respectively systems"
10	"approach with two different type types respectively systems"	local:with_twodifferenttypetypesrespectivelysystems	"approach"
10	"approach with two different type types respectively systems"	local:approach_with	"two different type types respectively systems"
10	"show"	vn.role:Theme	"feasibility"
10	"feasibility of we"	local:of_we	"feasibility"
10	"feasibility of we"	local:feasibility_of	"we"
10	"approach"	vn.role:object	"feasibility of we"
10	"different type"	rdfs:subClassOf	"type"
10	"type"	rdfs:member	"type systems"
10	"different type"	rdfs:member	"different type systems"
10	"type systems"	rdfs:subClassOf	"systems"
10	"different type systems"	rdfs:subClassOf	"systems"
10	"different"	rdfs:member	"different type"
10	"respectively systems"	rdfs:subClassOf	"systems"
10	"types respectively systems"	rdfs:subClassOf	"respectively systems"
10	"thousands types"	rdfs:subClassOf	"types"
10	"type types respectively systems"	rdfs:subClassOf	"types respectively systems"
10	"different type types respectively systems"	rdfs:subClassOf	"type types respectively systems"
10	"two different type types respectively systems"	rdfs:subClassOf	"different type types respectively systems"
10	"approach"	vn.role:indirect_object	"two different type types respectively systems"
11	"show"	vn.role:Agent	"we"
11	"respectively thousands"	rdfs:subClassOf	"thousands"
11	"types approach"	rdfs:subClassOf	"approach"
11	"respectively thousands types"	rdfs:subClassOf	"types"
11	"types approach with dbpedia"	local:with_dbpedia	"types approach"
11	"types approach with dbpedia"	local:typesapproach_with	"dbpedia"
11	"show"	vn.role:Theme	"feasibility"
11	"feasibility of we"	local:of_we	"feasibility"
11	"feasibility of we"	local:feasibility_of	"we"
11	"approach"	vn.role:object	"feasibility of we"
11	"respectively dbpedia"	rdfs:subClassOf	"dbpedia"
11	"types respectively dbpedia"	rdfs:subClassOf	"respectively dbpedia"
11	"thousands types"	rdfs:subClassOf	"types"
11	"approach"	vn.role:indirect_object	"types respectively dbpedia"
12	"show"	vn.role:Agent	"we"
12	"respectively hundreds"	rdfs:subClassOf	"hundreds"
12	"types approach"	rdfs:subClassOf	"approach"
12	"respectively hundreds types"	rdfs:subClassOf	"types"
12	"types approach with dbpedia"	local:with_dbpedia	"types approach"
12	"types approach with dbpedia"	local:typesapproach_with	"dbpedia"
12	"show"	vn.role:Theme	"feasibility"
12	"feasibility of we"	local:of_we	"feasibility"
12	"feasibility of we"	local:feasibility_of	"we"
12	"approach"	vn.role:object	"feasibility of we"
12	"respectively dbpedia"	rdfs:subClassOf	"dbpedia"
12	"types respectively dbpedia"	rdfs:subClassOf	"respectively dbpedia"
12	"hundreds types"	rdfs:subClassOf	"types"
12	"approach"	vn.role:indirect_object	"types respectively dbpedia"
13	"show"	vn.role:Agent	"we"
13	"respectively thousands"	rdfs:subClassOf	"thousands"
13	"types approach"	rdfs:subClassOf	"approach"
13	"respectively thousands types"	rdfs:subClassOf	"types"
13	"types approach with freebase"	local:with_freebase	"types approach"
13	"types approach with freebase"	local:typesapproach_with	"freebase"
13	"show"	vn.role:Theme	"feasibility"
13	"feasibility of we"	local:of_we	"feasibility"
13	"feasibility of we"	local:feasibility_of	"we"
13	"approach"	vn.role:object	"feasibility of we"
13	"respectively freebase"	rdfs:subClassOf	"freebase"
13	"types respectively freebase"	rdfs:subClassOf	"respectively freebase"
13	"thousands types"	rdfs:subClassOf	"types"
13	"approach"	vn.role:indirect_object	"types respectively freebase"
14	"show"	vn.role:Agent	"we"
14	"respectively hundreds"	rdfs:subClassOf	"hundreds"
14	"types approach"	rdfs:subClassOf	"approach"
14	"respectively hundreds types"	rdfs:subClassOf	"types"
14	"types approach with freebase"	local:with_freebase	"types approach"
14	"types approach with freebase"	local:typesapproach_with	"freebase"
14	"show"	vn.role:Theme	"feasibility"
14	"feasibility of we"	local:of_we	"feasibility"
14	"feasibility of we"	local:feasibility_of	"we"
14	"approach"	vn.role:object	"feasibility of we"
14	"respectively freebase"	rdfs:subClassOf	"freebase"
14	"types respectively freebase"	rdfs:subClassOf	"respectively freebase"
14	"hundreds types"	rdfs:subClassOf	"types"
14	"approach"	vn.role:indirect_object	"types respectively freebase"
15	"describe"	vn.role:Agent	"we"
15	"equivalence"	rdfs:member	"equivalence relations"
15	"type systems"	rdfs:subClassOf	"systems"
15	"equivalence relations"	rdfs:subClassOf	"relations"
15	"type"	rdfs:member	"type systems"
15	"two type systems"	rdfs:subClassOf	"type systems"
15	"can used"	rdfs:subClassOf	"used"
15	"equivalence relations between two type systems"	local:between_twotypesystems	"equivalence relations"
15	"equivalence relations between two type systems"	local:equivalencerelations_between	"two type systems"
15	"describe"	vn.role:Theme	"can used"
15	"used"	vn.role:Theme	"techniques"
15	"used"	local:AM-MOD	"can"
15	"estimate"	rdfs:member	"estimate equivalence"
15	"equivalence"	rdfs:member	"equivalence relations"
15	"type"	rdfs:member	"type systems"
15	"equivalence relations"	rdfs:subClassOf	"relations"
15	"estimate equivalence"	rdfs:subClassOf	"equivalence"
15	"type systems"	rdfs:subClassOf	"systems"
15	"estimate equivalence"	rdfs:member	"estimate equivalence relations"
15	"estimate equivalence relations"	rdfs:subClassOf	"relations"
15	"two type systems"	rdfs:subClassOf	"type systems"
15	"estimate equivalence relations"	rdfs:subClassOf	"equivalence relations"
15	"estimate equivalence relations between two type systems"	local:between_twotypesystems	"estimate equivalence relations"
15	"estimate equivalence relations between two type systems"	local:estimateequivalencerelations_between	"two type systems"
15	"used"	vn.role:Recipient	"estimate equivalence relations between two type systems"
15	"equivalence"	rdfs:member	"equivalence relations"
15	"type systems"	rdfs:subClassOf	"systems"
15	"equivalence relations"	rdfs:subClassOf	"relations"
15	"type"	rdfs:member	"type systems"
15	"two type systems"	rdfs:subClassOf	"type systems"
15	"equivalence relations between two type systems"	local:between_twotypesystems	"equivalence relations"
15	"equivalence relations between two type systems"	local:equivalencerelations_between	"two type systems"
15	"estimate"	vn.role:Theme	"equivalence relations between two type systems"
16	"compare"	vn.role:Patient1	"we"
16	"sensitive"	rdfs:member	"sensitive hashing"
16	"hashing"	rdfs:member	"hashing techniques"
16	"hashing techniques"	rdfs:subClassOf	"techniques"
16	"sensitive hashing"	rdfs:member	"sensitive hashing techniques"
16	"different"	rdfs:member	"different locality"
16	"sensitive hashing"	rdfs:subClassOf	"hashing"
16	"sensitive hashing techniques"	rdfs:subClassOf	"techniques"
16	"different locality"	rdfs:subClassOf	"locality"
16	"sensitive locality"	rdfs:subClassOf	"locality"
16	"different two"	rdfs:subClassOf	"two"
16	"compare"	vn.role:Patient2	"different two"
16	"instance"	rdfs:member	"instance similarity"
16	"instance similarity"	rdfs:subClassOf	"similarity"
16	"computing instance similarity"	rdfs:subClassOf	"instance similarity"
16	"compare"	vn.role:Agent	"computing instance similarity"
17	"describe"	vn.role:Agent	"we"
17	"containment relations"	rdfs:subClassOf	"relations"
17	"type systems"	rdfs:subClassOf	"systems"
17	"containment"	rdfs:member	"containment relations"
17	"type"	rdfs:member	"type systems"
17	"two type systems"	rdfs:subClassOf	"type systems"
17	"can used"	rdfs:subClassOf	"used"
17	"containment relations between two type systems"	local:between_twotypesystems	"containment relations"
17	"containment relations between two type systems"	local:containmentrelations_between	"two type systems"
17	"describe"	vn.role:Theme	"can used"
17	"used"	vn.role:Theme	"techniques"
17	"used"	local:AM-MOD	"can"
17	"estimate containment"	rdfs:subClassOf	"containment"
17	"estimate containment"	rdfs:member	"estimate containment relations"
17	"type"	rdfs:member	"type systems"
17	"containment relations"	rdfs:subClassOf	"relations"
17	"type systems"	rdfs:subClassOf	"systems"
17	"containment"	rdfs:member	"containment relations"
17	"estimate"	rdfs:member	"estimate containment"
17	"estimate containment relations"	rdfs:subClassOf	"relations"
17	"two type systems"	rdfs:subClassOf	"type systems"
17	"estimate containment relations"	rdfs:subClassOf	"containment relations"
17	"estimate containment relations between two type systems"	local:between_twotypesystems	"estimate containment relations"
17	"estimate containment relations between two type systems"	local:estimatecontainmentrelations_between	"two type systems"
17	"used"	vn.role:Recipient	"estimate containment relations between two type systems"
17	"containment relations"	rdfs:subClassOf	"relations"
17	"type systems"	rdfs:subClassOf	"systems"
17	"containment"	rdfs:member	"containment relations"
17	"type"	rdfs:member	"type systems"
17	"two type systems"	rdfs:subClassOf	"type systems"
17	"containment relations between two type systems"	local:between_twotypesystems	"containment relations"
17	"containment relations between two type systems"	local:containmentrelations_between	"two type systems"
17	"estimate"	vn.role:Theme	"containment relations between two type systems"
