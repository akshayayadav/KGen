We present a technique for answering queries over RDF data through an evolutionary search algorithm, using fingerprinting for rapid approximate evaluation of generated solutions.
We present a technique for answering queries over RDF data through an evolutionary search algorithm, using Bloom filters for rapid approximate evaluation of generated solutions.
We evolutionary approach has several advantages compared to traditional database-style query answering.
First, the result quality increases monotonically in addition, the level of approximation can be tuned by varying the size of the Bloom filters.
First, the result quality converges with each evolution, offering “ anytime ” behaviour with arbitrary trade-off between query results in addition, the level of approximation can be tuned by varying the size of the Bloom filters.
First, the result quality converges with each evolution, offering “ anytime ” behaviour with arbitrary trade-off between computation time in addition, the level of approximation can be tuned by varying the size of the Bloom filters.
Secondly, through Bloom filter compression we can fit large graphs in main memory, reducing the need for disk IO during query evaluation.
Finally, since the individuals evolve independently, parallel execution is straightforward.
prototype that evaluates basic SPARQL queries over arbitrary RDF graphs.
prototype that show initial results over large datasets.
We present We prototype.