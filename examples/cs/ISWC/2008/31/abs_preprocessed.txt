We study the problem of query answering on top of distributed hash tables.
We study the problem of distributed RDFS reasoning on top of distributed hash tables.
Scalable distributed RDFS reasoning.
Scalable is an essential functionality for providing the scalability and performance that large-scale Semantic Web applications require.
We goal in this paper is to compare two well-known approaches to RDFS reasoning, namely backward on top of distributed hash tables.
We goal in this paper is to compare two well-known approaches to RDFS reasoning, forward chaining on top of distributed hash tables.
We goal in this paper is to evaluate two well-known approaches to RDFS reasoning, namely backward on top of distributed hash tables.
We goal in this paper is to evaluate two well-known approaches to RDFS reasoning, forward chaining on top of distributed hash tables.
We show how to implement both the algorithms.
We show how to prove Bamboo correctness.
We also study the time-space trade-off exhibited by the algorithms analytically.
We also study the time-space trade-off experimentally by evaluating We algorithms on PlanetLab.