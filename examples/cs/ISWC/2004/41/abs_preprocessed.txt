In an open environment integration is a major challenge.
an open environment populated by large numbers of heterogeneous information services.
In such a setting, the efficient coupling between directory-based service discovery is crucial.
In such a setting, the efficient coupling between service composition engines is crucial.
a directory service that offers specific functionality in order to enable efficient service integration.
In this paper we present a directory service.
The directory implementation relies on a multidimensional index structure.
The directory implementation relies on a compact numerical encoding of service parameters.
The directory implementation supports isolated service integration sessions.
isolated service integration sessions providing a consistent view of the directory data.
During a session a client may issue multiple queries to the directory.
During a session a client may retrieve the results incrementally.
In order to optimize the interaction of the directory with different service composition algorithms, the directory supports custom ranking functions.
custom ranking functions that are dynamically installed with the aid of mobile code.
the directory service imposes severe restrictions on the programming model in order to protect the directory service against malicious code ).
the directory service imposes severe restrictions on the programming model in order to protect the directory service against erroneous code ).
the directory service imposes severe restrictions on the programming model in order to protect the directory service against e.g., denial-of-service attacks ).
The ranking functions are written in Java.
With the aid of user-defined ranking functions, application-specific can be deployed directly.
application-specific ordering heuristics.
Experiments on randomly generated problems show that randomly generated problems significantly reduce the number of query results that have to be transmitted to the client by up to 5 times.