The need for scalable query answering often forces Semantic Web applications to use incomplete OWL 2 reasoners, which in some cases fail to derive all answers to a query. This is clearly undesirable, and in some applications may even be unacceptable. To address this problem, we investigate the problem of ‘repairing’ an ontology T–that is, computing an ontology R such that a reasoner that is incomplete for T becomes complete when used with T ∪ R. We identify conditions on T and the reasoner that make this possible, present a practical algorithm for computing R, and present a preliminary evaluation which shows that, in some realistic cases, repairs are feasible to compute, reasonable in size, and do not significantly affect reasoner performance.
