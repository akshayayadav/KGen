available SPARQL endpoints that support remote query processing.
Following the design rules of Linked Data, the number of available SPARQL endpoints is quickly growing; however, because of the lack of adaptivity, query executions may frequently be unsuccessful.
fixed plans identified following the traditional optimize-then-execute paradigm.
First, fixed plans may timeout as a consequence of endpoint availability.
Second, because blocking operators are usually implemented, endpoint query engines may become blocked if data sources stop sending data.
Second, because blocking operators are usually implemented, endpoint query engines are not able to incrementally produce results.
We present an adaptive query engine for SPARQL endpoints.
SPARQL endpoints that adapts query execution schedulers to run-time conditions.
SPARQL endpoints that adapts query execution schedulers to data availability.
We present ANAPSID.
opportunistically, the operators produce results as quickly as data arrives from the sources.
ANAPSID provides physical SPARQL operators.
physical SPARQL operators that detect when a source becomes blocked.
physical SPARQL operators that detect when data traffic is bursty.
Additionally, ANAPSID operators implement main memory replacement policies to move previously computed matches to secondary memory avoiding duplicates.
We compared ANAPSID performance with respect to RDF stores and endpoints, and observed that ANAPSID speeds up execution time, in some cases, in more than one order of magnitude.