ontologies expressed in a polynomial fragment ELH _ R of the OWL 2 EL profile.
We describe an optimised consequence-based procedure for classification of ontologies.
multiple processorscores which increasingly prevail in computer systems.
A distinguishing property of We procedure is that our procedure can take advantage of multiple processorscores.
first-order theorem proving where We assign derived axioms to ‘ contexts’ within which contexts' within can be used.
first-order theorem proving where We assign derived axioms to ‘ contexts’ within which can be processed independently.
We solution is based on a variant of the ‘ given clause ’ saturation algorithm for first-order theorem proving.
We describe an implementation of We within the Java-based reasoner ELK.
We implementation is light-weight in the sense that an overhead of managing concurrent computations is minimal.
This is achieved by employing lock-free data operations such as ‘ compare-and-swap ’.
This is achieved by employing lock-free data structures such as ‘ compare-and-swap ’.
We report on preliminary experimental results.
preliminary experimental results demonstrating a substantial speedup of ontology classification on multi-core systems.
In particular, one of widely-used medical ontologies SNOMED CT can be classified in as little as 5 seconds.
In particular, one of the largest SNOMED CT can be classified in as little as 5 seconds.