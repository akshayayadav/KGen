Semantic Web browsers are all concerned with the same problem: presenting content primarily intended for machine consumption in a human-readable way.
other tools are all concerned with the same problem: presenting content primarily intended for machine consumption in a human-readable way.
other tools aimed at displaying core RDF data to end users.
other tools aimed at displaying RDF data to end users solutions.
other tools differ but in the end address the same two high-level issues, no matter the underlying representation paradigm: specifying what information should be presented ( content selection ).
Semantic Web browsers differ but in the end address the same two high-level issues, no matter the underlying representation paradigm: specifying what information should be presented ( content selection ).
Semantic Web browsers differ but in the end address the same two high-level issues, no matter the underlying representation paradigm: specifying how this information should be presented ( styling ).
other tools differ but in the end address the same two high-level issues, no matter the underlying representation paradigm: specifying how this information should be presented ( styling ).
Semantic Web browsers differ but in the end address the same two high-level issues, no matter the underlying representation paradigm: specifying how this information should be presented ( content formatting ).
information contained in core RDF models.
other tools differ but in the end address the same two high-level issues, no matter the underlying representation paradigm: specifying how this information should be presented ( content formatting ).
However, each tool currently relies on each tool own ad vocabulary for specifying core RDF presentation knowledge, making it difficult to share such knowledge across applications.
However, each tool currently relies on each tool own ad vocabulary for specifying core RDF presentation knowledge, making it difficult to reuse such knowledge across applications.
However, each tool currently relies on each tool own ad hoc mechanisms.
wanting to promote the exchange of presentation knowledge we designed Fresnel as a browser-independent vocabulary of core RDF display concepts.
Recognizing the general need for presenting core RDF content to users we designed Fresnel as a browser-independent vocabulary of core RDF display concepts.
In this paper we describe Fresnel’s main present several RDF browsers.
In this paper we describe Fresnel’s main concepts several RDF browsers.
In this paper we describe visualization tools.
visualization tools that have adopted the vocabulary so far.