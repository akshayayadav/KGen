Automatic knowledge reuse for Semantic Web applications imposes several challenges on ontology search.
Existing ontology retrieval systems merely return a lengthy list of relevant single ontologies.
relevant single ontologies which may not completely cover the specified user requirements.
Therefore, there arises combination of ontologies.
ontologies which can entirely fulfill the requirements.
Therefore, there arises an increasing demand for a tool or algorithm with a mechanism to check concept adequacy of existing ontologies with respect to a user query.
Therefore, there arises an increasing demand for a tool or algorithm with a mechanism to recommend a single.
a combinative ontology that guarantees query coverage.
Thus, this paper develops an algorithm, namely combiSQORE to determine whether the available collection of ontologies is able to return a combinative ontology.
Thus, this paper develops an algorithm, namely combiSQORE to determine whether the available collection of ontologies is able to completely satisfy a submitted query.
a single ontology that guarantees query coverage.
Thus, this paper develops an algorithm, namely combiSQORE to determine whether the available collection of ontologies is able to return a single ontology.
the returned answers based on the returned answers based on their conceptual closeness query coverage.
the returned answers based on the returned answers based on their conceptual closeness conceptual closeness.
the returned answers based on the returned answers based on query coverage query coverage.
the returned answers based on the returned answers based on query coverage conceptual closeness.
In addition, this paper ranks the returned answers.
The experimental results show that the proposed algorithm is simple.
The experimental results show that the proposed algorithm is efficient.
The experimental results show that the proposed algorithm is effective.